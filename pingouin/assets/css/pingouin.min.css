; var SceneGame = Class.create(Scene,{initialize:function() { var game,label,bg,penguin,iceGroup;//Call superclass constructor Scene.apply(this);//Access to the game singleton instance game = Game.instance; label = new Label('SCORE<br>0'); label.x = 9; label.y = 32; label.color = 'white'; label.font = '16px strong'; label.textAlign = 'center'; label._style.textShadow ="-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black"; this.scoreLabel = label; bg = new Sprite(320,440); bg.image = game.assets['res/BG.png']; penguin = new Penguin(); penguin.x = game.width/2 - penguin.width/2; penguin.y = 280; this.penguin = penguin; iceGroup = new Group(); this.iceGroup = iceGroup; this.addChild(bg); this.addChild(iceGroup); this.addChild(penguin); this.addChild(label); this.addEventListener(Event.TOUCH_START,this.handleTouchControl); this.addEventListener(Event.ENTER_FRAME,this.update);//Instance variables this.generateIceTimer = 0; this.scoreTimer = 0; this.score = 0; this.bgm = game.assets['res/bgm.mp3'];//Add this line//Start BGM this.bgm.play(); },handleTouchControl: function (evt) { var laneWidth,lane; laneWidth = 320/3; lane = Math.floor(evt.x/laneWidth); lane = Math.max(Math.min(2,lane),0); this.penguin.switchToLaneNumber(lane); },update: function(evt) {//Score increase as time pass this.scoreTimer += evt.elapsed * .001; if(this.scoreTimer >= .5) { this.setScore(this.score + 1); this.scoreTimer -= .5; }//Check if it's time to create a new set of obstacles
        this.generateIceTimer += evt.elapsed * 0.001;
        if(this.generateIceTimer >= 0.5)
        {
            var ice;
            this.generateIceTimer -= 0.5;
            ice = new Ice(Math.floor(Math.random()*3));
            this.iceGroup.addChild(ice);
        }

        // Check collision
        for (var i = this.iceGroup.childNodes.length - 1; i >= 0; i--) {
            var ice;
            ice = this.iceGroup.childNodes[i];
            if(ice.intersect(this.penguin)){  
                var game;
                game = Game.instance;
                game.assets['res/Hit.mp3'].play();                    
                this.iceGroup.removeChild(ice);
                this.bgm.stop();
                game.replaceScene(new SceneGameOver(this.score));        
                break;
            }
        }

        // Loop BGM
        if( this.bgm.currentTime >= this.bgm.duration ){
            this.bgm.play();
        }
    },

    setScore: function (value) {
        this.score = value;
        this.scoreLabel.text = 'SCORE<br>' + this.score;
    }
});

/**
 * Penguin
 */
 var Penguin = Class.create(Sprite, {
    /**
     * The player character.     
     */
    initialize: function() {
        // Call superclass constructor
        Sprite.apply(this,[30, 43]);
        this.image = Game.instance.assets['res/penguinSheet.png'];        
        this.animationDuration = 0;
        this.addEventListener(Event.ENTER_FRAME, this.updateAnimation);
    },

    updateAnimation: function (evt) {        
        this.animationDuration += evt.elapsed * 0.001;       
        if(this.animationDuration >= 0.25)
        {
            this.frame = (this.frame + 1) % 2;
            this.animationDuration -= 0.25;
        }
    },

    switchToLaneNumber: function(lane){     
        var targetX = 160 - this.width/2 + (lane-1)*90;
        this.x = targetX;
    }
});

 /**
 * Ice Cube
 */
var Ice = Class.create(Sprite, {
    /**
     * The obstacle that the penguin must avoid
     */
    initialize: function(lane) {
        // Call superclass constructor
        Sprite.apply(this,[48, 49]);
        this.image  = Game.instance.assets['res/Ice.png'];      
        this.rotationSpeed = 0;
        this.setLane(lane);
        this.addEventListener(Event.ENTER_FRAME, this.update);
    },

    setLane: function(lane) {
        var game, distance;
        game = Game.instance;        
        distance = 90;
     
        this.rotationSpeed = Math.random() * 100 - 50;
     
        this.x = game.width/2 - this.width/2 + (lane - 1) * distance;
        this.y = -this.height;    
        this.rotation = Math.floor( Math.random() * 360 );    
    },

    update: function(evt) { 
        var ySpeed, game;
     
        game = Game.instance;
        ySpeed = 300;
     
        this.y += ySpeed * evt.elapsed * 0.001;
        this.rotation += this.rotationSpeed * evt.elapsed * 0.001;           
        if(this.y > game.height)
        {
            this.parentNode.removeChild(this);          
        }
    }
});

/**
 * SceneGameOver  
 */
var SceneGameOver = Class.create(Scene, {
    initialize: function(score) {
        var gameOverLabel, scoreLabel;
        Scene.apply(this);
        this.backgroundColor = 'black';

        gameOverLabel = new Label("GAME OVER<br>Tap to Restart");
        gameOverLabel.x = 8;
        gameOverLabel.y = 128;
        gameOverLabel.color = 'white';
        gameOverLabel.font = '32px strong';
        gameOverLabel.textAlign = 'center';

        scoreLabel = new Label('SCORE<br>' + score);
        scoreLabel.x = 9;
        scoreLabel.y = 32;        
        scoreLabel.color = 'white';
        scoreLabel.font = '16px strong';
        scoreLabel.textAlign = 'center';

        this.addChild(gameOverLabel);
        this.addChild(scoreLabel);

        this.addEventListener(Event.TOUCH_START, this.touchToRestart);


    },

    touchToRestart: function(evt) {
        var game = Game.instance;
        game.replaceScene(new SceneGame());
    }
});
enchant(),window.onload=function(){var t=new Game(320,440);t.preload("res/BG.png","res/penguinSheet.png","res/Ice.png","res/Hit.mp3","res/bgm.mp3"),t.fps=30,t.scale=1,t.onload=function(){console.log("Hi, Ocean!");var e=new SceneGame;t.pushScene(e)},window.scrollTo(0,0),t.start()};var SceneGame=Class.create(Scene,{initialize:function(){var t,e,n,i,s;Scene.apply(this),t=Game.instance,e=new Label("SCORE<br>0"),e.x=9,e.y=32,e.color="white",e.font="16px strong",e.textAlign="center",e._style.textShadow="-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black",this.scoreLabel=e,n=new Sprite(320,440),n.image=t.assets["res/BG.png"],i=new Penguin,i.x=t.width/2-i.width/2,i.y=280,this.penguin=i,s=new Group,this.iceGroup=s,this.addChild(n),this.addChild(s),this.addChild(i),this.addChild(e),this.addEventListener(Event.TOUCH_START,this.handleTouchControl),this.addEventListener(Event.ENTER_FRAME,this.update),this.generateIceTimer=0,this.scoreTimer=0,this.score=0,this.bgm=t.assets["res/bgm.mp3"],this.bgm.play()},handleTouchControl:function(t){var e,n;e=320/3,n=Math.floor(t.x/e),n=Math.max(Math.min(2,n),0),this.penguin.switchToLaneNumber(n)},update:function(t){if(this.scoreTimer+=.001*t.elapsed,this.scoreTimer>=.5&&(this.setScore(this.score+1),this.scoreTimer-=.5),this.generateIceTimer+=.001*t.elapsed,this.generateIceTimer>=.5){var e;this.generateIceTimer-=.5,e=new Ice(Math.floor(3*Math.random())),this.iceGroup.addChild(e)}for(var n=this.iceGroup.childNodes.length-1;n>=0;n--){var e;if(e=this.iceGroup.childNodes[n],e.intersect(this.penguin)){var i;i=Game.instance,i.assets["res/Hit.mp3"].play(),this.iceGroup.removeChild(e),this.bgm.stop(),i.replaceScene(new SceneGameOver(this.score));break}}this.bgm.currentTime>=this.bgm.duration&&this.bgm.play()},setScore:function(t){this.score=t,this.scoreLabel.text="SCORE<br>"+this.score}}),Penguin=Class.create(Sprite,{initialize:function(){Sprite.apply(this,[30,43]),this.image=Game.instance.assets["res/penguinSheet.png"],this.animationDuration=0,this.addEventListener(Event.ENTER_FRAME,this.updateAnimation)},updateAnimation:function(t){this.animationDuration+=.001*t.elapsed,this.animationDuration>=.25&&(this.frame=(this.frame+1)%2,this.animationDuration-=.25)},switchToLaneNumber:function(t){var e=160-this.width/2+90*(t-1);this.x=e}}),Ice=Class.create(Sprite,{initialize:function(t){Sprite.apply(this,[48,49]),this.image=Game.instance.assets["res/Ice.png"],this.rotationSpeed=0,this.setLane(t),this.addEventListener(Event.ENTER_FRAME,this.update)},setLane:function(t){var e,n;e=Game.instance,n=90,this.rotationSpeed=100*Math.random()-50,this.x=e.width/2-this.width/2+(t-1)*n,this.y=-this.height,this.rotation=Math.floor(360*Math.random())},update:function(t){var e,n;n=Game.instance,e=300,this.y+=e*t.elapsed*.001,this.rotation+=this.rotationSpeed*t.elapsed*.001,this.y>n.height&&this.parentNode.removeChild(this)}}),SceneGameOver=Class.create(Scene,{initialize:function(t){var e,n;Scene.apply(this),this.backgroundColor="black",e=new Label("GAME OVER<br>Tap to Restart"),e.x=8,e.y=128,e.color="white",e.font="32px strong",e.textAlign="center",n=new Label("SCORE<br>"+t),n.x=9,n.y=32,n.color="white",n.font="16px strong",n.textAlign="center",this.addChild(e),this.addChild(n),this.addEventListener(Event.TOUCH_START,this.touchToRestart)},touchToRestart:function(t){var e=Game.instance;e.replaceScene(new SceneGame)}});"function"!=typeof Object.defineProperty&&(Object.defineProperty=function(t,e,n){return"value"in n&&(t[e]=n.value),"get"in n&&t.__defineGetter__(e,n.get),"set"in n&&t.__defineSetter__(e,n.set),t}),"function"!=typeof Object.defineProperties&&(Object.defineProperties=function(t,e){for(var n in e)e.hasOwnProperty(n)&&Object.defineProperty(t,n,e[n]);return t}),"function"!=typeof Object.create&&(Object.create=function(t,e){function n(){}n.prototype=t;var i=new n;return null!=e&&Object.defineProperties(i,e),i}),"function"!=typeof Object.getPrototypeOf&&(Object.getPrototypeOf=function(t){return t.__proto__}),"function"!=typeof Function.prototype.bind&&(Function.prototype.bind=function(t){var e=this,n=Array.prototype.slice.call(arguments,1),i=function(){},s=function(){var s=n.concat(Array.prototype.slice.call(arguments));return e.apply(this instanceof i?this:t||window,s)};return i.prototype=e.prototype,s.prototype=new i,s});var enchant=function(t){if(null!=t&&(t instanceof Array||(t=Array.prototype.slice.call(arguments)),t=t.filter(function(t){return[t].join()})),function e(n,i){var s,a,h=[];for(var o in n)n.hasOwnProperty(o)&&("function"==typeof n[o]?window[o]=n[o]:"object"==typeof n[o]&&Object.getPrototypeOf(n[o])===Object.prototype&&(null==t?h.push(o):(s=t.indexOf(i+o),-1!==s&&(h.push(o),t.splice(s,1)))));for(s=0,a=h.length;a>s;s++)e(n[h[s]],i+h[s]+".")}(enchant,""),null!=t&&t.length)throw new Error("Cannot load module: "+t.join(", "))};window.addEventListener("message",function(t,e){try{var n=JSON.parse(t.data);if("event"===n.type)enchant.Game.instance.dispatchEvent(new enchant.Event(n.value));else if("debug"===n.type)switch(n.value){case"start":enchant.Game.instance.start();break;case"pause":enchant.Game.instance.pause();break;case"resume":enchant.Game.instance.resume();break;case"tick":enchant.Game.instance._tick()}}catch(i){}},!1),enchant.Class=function(t,e){return enchant.Class.create(t,e)},enchant.Class.create=function(t,e){if(0===arguments.length)return enchant.Class.create(Object,e);if(1===arguments.length&&"function"!=typeof arguments[0])return enchant.Class.create(Object,arguments[0]);for(var n in e)e.hasOwnProperty(n)&&("object"==typeof e[n]&&Object.getPrototypeOf(e[n])===Object.prototype?"enumerable"in e[n]||(e[n].enumerable=!0):e[n]={value:e[n],enumerable:!0,writable:!0});var i=function(){return this instanceof i?void i.prototype.initialize.apply(this,arguments):new i};return i.prototype=Object.create(t.prototype,e),i.prototype.constructor=i,null==i.prototype.initialize&&(i.prototype.initialize=function(){t.apply(this,arguments)}),i},enchant.ENV={VENDOR_PREFIX:function(){var t=navigator.userAgent;return-1!==t.indexOf("Opera")?"O":-1!==t.indexOf("MSIE")?"ms":-1!==t.indexOf("WebKit")?"webkit":"Gecko"===navigator.product?"Moz":""}(),TOUCH_ENABLED:function(){var t=document.createElement("div");return t.setAttribute("ontouchstart","return"),"function"==typeof t.ontouchstart}(),RETINA_DISPLAY:function(){if(-1!==navigator.userAgent.indexOf("iPhone")&&2===window.devicePixelRatio){var t=document.querySelector('meta[name=viewport]');return null==t&&(t=document.createElement("meta"),document.head.appendChild(t)),t.setAttribute("content","width=640"),!0}return!1}(),USE_FLASH_SOUND:function(){var t=navigator.userAgent,e=navigator.vendor||"";return 0===location.href.indexOf("http")&&-1===t.indexOf("Mobile")&&-1!==e.indexOf("Apple")}(),USE_DEFAULT_EVENT_TAGS:["input","textarea","select","area"],CANVAS_DRAWING_METHODS:["putImageData","drawImage","drawFocusRing","fill","stroke","clearRect","fillRect","strokeRect","fillText","strokeText"]},enchant.Event=enchant.Class.create({initialize:function(t){this.type=t,this.target=null,this.x=0,this.y=0,this.localX=0,this.localY=0},_initPosition:function(t,e){var n=enchant.Game.instance;this.x=this.localX=(t-n._pageX)/n.scale,this.y=this.localY=(e-n._pageY)/n.scale}}),enchant.Event.LOAD="load",enchant.Event.PROGRESS="progress",enchant.Event.ENTER_FRAME="enterframe",enchant.Event.EXIT_FRAME="exitframe",enchant.Event.ENTER="enter",enchant.Event.EXIT="exit",enchant.Event.ADDED="added",enchant.Event.ADDED_TO_SCENE="addedtoscene",enchant.Event.REMOVED="removed",enchant.Event.REMOVED_FROM_SCENE="removedfromscene",enchant.Event.TOUCH_START="touchstart",enchant.Event.TOUCH_MOVE="touchmove",enchant.Event.TOUCH_END="touchend",enchant.Event.RENDER="render",enchant.Event.INPUT_START="inputstart",enchant.Event.INPUT_CHANGE="inputchange",enchant.Event.INPUT_END="inputend",enchant.Event.LEFT_BUTTON_DOWN="leftbuttondown",enchant.Event.LEFT_BUTTON_UP="leftbuttonup",enchant.Event.RIGHT_BUTTON_DOWN="rightbuttondown",enchant.Event.RIGHT_BUTTON_UP="rightbuttonup",enchant.Event.UP_BUTTON_DOWN="upbuttondown",enchant.Event.UP_BUTTON_UP="upbuttonup",enchant.Event.DOWN_BUTTON_DOWN="downbuttondown",enchant.Event.DOWN_BUTTON_UP="downbuttonup",enchant.Event.A_BUTTON_DOWN="abuttondown",enchant.Event.A_BUTTON_UP="abuttonup",enchant.Event.B_BUTTON_DOWN="bbuttondown",enchant.Event.B_BUTTON_UP="bbuttonup",enchant.EventTarget=enchant.Class.create({initialize:function(){this._listeners={}},addEventListener:function(t,e){var n=this._listeners[t];null==n?this._listeners[t]=[e]:-1===n.indexOf(e)&&n.unshift(e)},on:function(){this.addEventListener.apply(this,arguments)},removeEventListener:function(t,e){var n=this._listeners[t];if(null!=n){var i=n.indexOf(e);-1!==i&&n.splice(i,1)}},clearEventListener:function(t){null!=t?delete this._listeners[t]:this._listeners={}},dispatchEvent:function(t){t.target=this,t.localX=t.x-this._offsetX,t.localY=t.y-this._offsetY,null!=this["on"+t.type]&&this["on"+t.type](t);var e=this._listeners[t.type];if(null!=e){e=e.slice();for(var n=0,i=e.length;i>n;n++)e[n].call(this,t)}}}),function(){var t;enchant.Game=enchant.Class.create(enchant.EventTarget,{initialize:function(e,n){if(null===window.document.body)throw new Error("document.body is null. Please excute 'new Game()' in window.onload.");enchant.EventTarget.call(this);var i=!0;t&&(i=!1,t.stop()),t=enchant.Game.instance=this,this.width=e||320,this.height=n||320,this.scale=1;var s=document.getElementById("enchant-stage");if(s){var a=window.getComputedStyle(s);for(e=parseInt(a.width,10),n=parseInt(a.height,10),e&&n?this.scale=Math.min(e/this.width,n/this.height):(s.style.width=this.width+"px",s.style.height=this.height+"px");s.firstChild;)s.removeChild(s.firstChild);s.style.position="relative";var h=s.getBoundingClientRect();this._pageX=Math.round(window.scrollX+h.left),this._pageY=Math.round(window.scrollY+h.top)}else s=document.createElement("div"),s.id="enchant-stage",s.style.width=window.innerWidth+"px",s.style.height=window.innerHeight+"px",s.style.position="absolute",document.body.firstChild?document.body.insertBefore(s,document.body.firstChild):document.body.appendChild(s),this.scale=Math.min(window.innerWidth/this.width,window.innerHeight/this.height),this._pageX=0,this._pageY=0;this.scale||(this.scale=1),s.style.fontSize="12px",s.style.webkitTextSizeAdjust="none",this._element=s,this.fps=30,this.frame=0,this.ready=null,this.running=!1,this.assets={};var o=this._assets=[];!function m(t){t.assets instanceof Array&&[].push.apply(o,t.assets);for(var e in t)t.hasOwnProperty(e)&&"object"==typeof t[e]&&Object.getPrototypeOf(t[e])===Object.prototype&&m(t[e])}(enchant),this._scenes=[],this.currentScene=null,this.rootScene=new enchant.Scene,this.pushScene(this.rootScene),this.loadingScene=new enchant.Scene,this.loadingScene.backgroundColor="#000";var r=.9*this.width|0,c=.3*this.width|0,d=.05*r|0,l=new enchant.Sprite(r,c);l.x=(this.width-r)/2,l.y=(this.height-c)/2;var u=new enchant.Surface(r,c);u.context.fillStyle="#fff",u.context.fillRect(0,0,r,c),u.context.fillStyle="#000",u.context.fillRect(d,d,r-2*d,c-2*d),l.image=u;var f=0,_=0;this.addEventListener("progress",function(t){f=t.loaded/t.total}),l.addEventListener("enterframe",function(){_*=.9,_+=.1*f,u.context.fillStyle="#fff",u.context.fillRect(d,0,(r-2*d)*_,c)}),this.loadingScene.addChild(l),this._mousedownID=0,this._surfaceID=0,this._soundID=0,this._intervalID=null,this._offsetX=0,this._offsetY=0,this.input={},this._keybind={},this.keybind(37,"left"),this.keybind(38,"up"),this.keybind(39,"right"),this.keybind(40,"down");var p=0;if(["left","right","up","down","a","b"].forEach(function(t){this.addEventListener(t+"buttondown",function(e){var n;this.input[t]||(this.input[t]=!0,n=new enchant.Event(p++?"inputchange":"inputstart"),this.dispatchEvent(n)),this.currentScene.dispatchEvent(e),n&&this.currentScene.dispatchEvent(n)}),this.addEventListener(t+"buttonup",function(e){var n;this.input[t]&&(this.input[t]=!1,n=new enchant.Event(--p?"inputchange":"inputend"),this.dispatchEvent(n)),this.currentScene.dispatchEvent(e),n&&this.currentScene.dispatchEvent(n)})},this),i){s=enchant.Game.instance._element;var v;document.addEventListener("keydown",function(e){if(t.dispatchEvent(new enchant.Event("keydown")),(37<=e.keyCode&&e.keyCode<=40||32===e.keyCode)&&(e.preventDefault(),e.stopPropagation()),t.running){var n=t._keybind[e.keyCode];n&&(v=new enchant.Event(n+"buttondown"),t.dispatchEvent(v))}},!0),document.addEventListener("keyup",function(e){if(t.running){var n=t._keybind[e.keyCode];n&&(v=new enchant.Event(n+"buttonup"),t.dispatchEvent(v))}},!0),enchant.ENV.TOUCH_ENABLED?(s.addEventListener("touchstart",function(e){var n=e.target.tagName.toLowerCase();-1===enchant.ENV.USE_DEFAULT_EVENT_TAGS.indexOf(n)&&(e.preventDefault(),t.running||e.stopPropagation())},!0),s.addEventListener("touchmove",function(e){var n=e.target.tagName.toLowerCase();-1===enchant.ENV.USE_DEFAULT_EVENT_TAGS.indexOf(n)&&(e.preventDefault(),t.running||e.stopPropagation())},!0),s.addEventListener("touchend",function(e){var n=e.target.tagName.toLowerCase();-1===enchant.ENV.USE_DEFAULT_EVENT_TAGS.indexOf(n)&&(e.preventDefault(),t.running||e.stopPropagation())},!0)):(s.addEventListener("mousedown",function(e){var n=e.target.tagName.toLowerCase();-1===enchant.ENV.USE_DEFAULT_EVENT_TAGS.indexOf(n)&&(e.preventDefault(),t._mousedownID++,t.running||e.stopPropagation())},!0),s.addEventListener("mousemove",function(e){var n=e.target.tagName.toLowerCase();-1===enchant.ENV.USE_DEFAULT_EVENT_TAGS.indexOf(n)&&(e.preventDefault(),t.running||e.stopPropagation())},!0),s.addEventListener("mouseup",function(e){var n=e.target.tagName.toLowerCase();-1===enchant.ENV.USE_DEFAULT_EVENT_TAGS.indexOf(n)&&(e.preventDefault(),t.running||e.stopPropagation())},!0))}},preload:function(t){t instanceof Array||(t=Array.prototype.slice.call(arguments)),[].push.apply(this._assets,t)},load:function(e,n){null==n&&(n=function(){});var i=enchant.Game.findExt(e);if(enchant.Game._loadFuncs[i])enchant.Game._loadFuncs[i].call(this,e,n,i);else{var s=new XMLHttpRequest;s.open("GET",e,!0),s.onreadystatechange=function(i){if(4===s.readyState){if(200!==s.status&&0!==s.status)throw new Error(s.status+": Cannot load an asset: "+e);var a=s.getResponseHeader("Content-Type")||"";a.match(/^image/)?(t.assets[e]=enchant.Surface.load(e),t.assets[e].addEventListener("load",n)):a.match(/^audio/)?(t.assets[e]=enchant.Sound.load(e,a),t.assets[e].addEventListener("load",n)):(t.assets[e]=s.responseText,n())}},s.send(null)}},start:function(){if(this._intervalID)window.clearInterval(this._intervalID);else if(this._assets.length){if(enchant.Sound.enabledInMobileSafari&&!t._touched&&"webkit"===enchant.ENV.VENDOR_PREFIX&&enchant.ENV.TOUCH_ENABLED){var e=new enchant.Scene;e.backgroundColor="#000";var n=Math.round(t.width/10),i=new enchant.Sprite(t.width,n);i.y=(t.height-n)/2,i.image=new enchant.Surface(t.width,n),i.image.context.fillStyle="#fff",i.image.context.font=n-1+"px bold Helvetica,Arial,sans-serif";var s=i.image.context.measureText("Touch to Start").width;return i.image.context.fillText("Touch to Start",(t.width-s)/2,n-1),e.addChild(i),document.addEventListener("touchstart",function(){t._touched=!0,t.removeScene(e),t.start()},!0),void t.pushScene(e)}for(var a={},h=(this._assets.filter(function(t){return t in a?!1:a[t]=!0})),o=0,r=h.length,c=function(){var e=new enchant.Event("progress");e.loaded=++o,e.total=r,t.dispatchEvent(e),o===r&&(t.removeScene(t.loadingScene),t.dispatchEvent(new enchant.Event("load")))},d=0;r>d;d++)this.load(h[d],c);this.pushScene(this.loadingScene)}else this.dispatchEvent(new enchant.Event("load"));this.currentTime=Date.now(),this._intervalID=window.setInterval(function(){t._tick()},1e3/this.fps),this.running=!0},debug:function(){this._debug=!0,this.rootScene.addEventListener("enterframe",function(t){this._actualFps=1/t}),this.start()},actualFps:{get:function(){return this._actualFps||this.fps}},_tick:function(){var t=Date.now(),e=new enchant.Event("enterframe");e.elapsed=t-this.currentTime,this.currentTime=t;for(var n=this.currentScene.childNodes.slice(),i=Array.prototype.push;n.length;){var s=n.pop();s.dispatchEvent(e),s.age++,s.childNodes&&i.apply(n,s.childNodes)}this.currentScene.age++,this.currentScene.dispatchEvent(e),this.dispatchEvent(e),this.dispatchEvent(new enchant.Event("exitframe")),this.frame++},stop:function(){this._intervalID&&(window.clearInterval(this._intervalID),this._intervalID=null),this.running=!1},pause:function(){this._intervalID&&(window.clearInterval(this._intervalID),this._intervalID=null)},resume:function(){this._intervalID||(this.currentTime=Date.now(),this._intervalID=window.setInterval(function(){t._tick()},1e3/this.fps),this.running=!0)},pushScene:function(t){return this._element.appendChild(t._element),this.currentScene&&this.currentScene.dispatchEvent(new enchant.Event("exit")),this.currentScene=t,this.currentScene.dispatchEvent(new enchant.Event("enter")),this._scenes.push(t)},popScene:function(){return this.currentScene===this.rootScene?this.currentScene:(this._element.removeChild(this.currentScene._element),this.currentScene.dispatchEvent(new enchant.Event("exit")),this.currentScene=this._scenes[this._scenes.length-2],this.currentScene.dispatchEvent(new enchant.Event("enter")),this._scenes.pop())},replaceScene:function(t){return this.popScene(),this.pushScene(t)},removeScene:function(t){if(this.currentScene===t)return this.popScene();var e=this._scenes.indexOf(t);return-1!==e?(this._scenes.splice(e,1),this._element.removeChild(t._element),t):null},keybind:function(t,e){this._keybind[t]=e},getElapsedTime:function(){return this.frame/this.fps}}),enchant.Game._loadFuncs={},enchant.Game._loadFuncs.jpg=enchant.Game._loadFuncs.jpeg=enchant.Game._loadFuncs.gif=enchant.Game._loadFuncs.png=enchant.Game._loadFuncs.bmp=function(t,e){this.assets[t]=enchant.Surface.load(t),this.assets[t].addEventListener("load",e)},enchant.Game._loadFuncs.mp3=enchant.Game._loadFuncs.aac=enchant.Game._loadFuncs.m4a=enchant.Game._loadFuncs.wav=enchant.Game._loadFuncs.ogg=function(t,e,n){this.assets[t]=enchant.Sound.load(t,"audio/"+n),this.assets[t].addEventListener("load",e)},enchant.Game.findExt=function(t){var e=t.match(/\.\w+$/);return e&&e.length>0?e[0].slice(1).toLowerCase():0===t.indexOf("data:")?t.split(/[\/;]/)[1].toLowerCase():null},enchant.Game.instance=null}(),enchant.Node=enchant.Class.create(enchant.EventTarget,{initialize:function(){enchant.EventTarget.call(this),this._x=0,this._y=0,this._offsetX=0,this._offsetY=0,this.age=0,this.parentNode=null,this.scene=null,this.addEventListener("touchstart",function(t){this.parentNode&&!this.parentNode._element&&this.parentNode.dispatchEvent(t)}),this.addEventListener("touchmove",function(t){this.parentNode&&!this.parentNode._element&&this.parentNode.dispatchEvent(t)}),this.addEventListener("touchend",function(t){this.parentNode&&!this.parentNode._element&&this.parentNode.dispatchEvent(t)})},moveTo:function(t,e){this._x=t,this._y=e,this._updateCoordinate()},moveBy:function(t,e){this._x+=t,this._y+=e,this._updateCoordinate()},x:{get:function(){return this._x},set:function(t){this._x=t,this._updateCoordinate()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._updateCoordinate()}},_updateCoordinate:function(){this.parentNode?(this._offsetX=this.parentNode._offsetX+this._x,this._offsetY=this.parentNode._offsetY+this._y):(this._offsetX=this._x,this._offsetY=this._y)},remove:function(){this._listener&&this.clearEventListener(),this.parentNode&&this.parentNode.removeChild(this)}}),enchant.Entity=enchant.Class.create(enchant.Node,{initialize:function(){var t=enchant.Game.instance;enchant.Node.call(this),this._element=document.createElement("div"),this._style=this._element.style,this._style.position="absolute",this._width=0,this._height=0,this._backgroundColor=null,this._opacity=1,this._visible=!0,this._buttonMode=null,enchant.Game.instance._debug&&(this._style.border="1px solid blue",this._style.margin="-1px"),this.buttonMode=null,this.buttonPressed=!1,this.addEventListener("touchstart",function(){if(this.buttonMode){this.buttonPressed=!0;var e=new enchant.Event(this.buttonMode+"buttondown");this.dispatchEvent(e),t.dispatchEvent(e)}}),this.addEventListener("touchend",function(){if(this.buttonMode){this.buttonPressed=!1;var e=new enchant.Event(this.buttonMode+"buttonup");this.dispatchEvent(e),t.dispatchEvent(e)}});var e=this,n=function(){e.dispatchEvent(new enchant.Event("render"))};this.addEventListener("addedtoscene",function(){n(),t.addEventListener("exitframe",n)}),this.addEventListener("removedfromscene",function(){t.removeEventListener("exitframe",n)}),this.addEventListener("render",function(){this._offsetX!==this._previousOffsetX&&(this._style.left=this._offsetX+"px"),this._offsetY!==this._previousOffsetY&&(this._style.top=this._offsetY+"px"),this._previousOffsetX=this._offsetX,this._previousOffsetY=this._offsetY}),enchant.ENV.TOUCH_ENABLED?(this._element.addEventListener("touchstart",function(t){for(var n=t.touches,i=0,s=n.length;s>i;i++)t=new enchant.Event("touchstart"),t.identifier=n[i].identifier,t._initPosition(n[i].pageX,n[i].pageY),e.dispatchEvent(t)},!1),this._element.addEventListener("touchmove",function(t){for(var n=t.touches,i=0,s=n.length;s>i;i++)t=new enchant.Event("touchmove"),t.identifier=n[i].identifier,t._initPosition(n[i].pageX,n[i].pageY),e.dispatchEvent(t)},!1),this._element.addEventListener("touchend",function(t){for(var n=t.changedTouches,i=0,s=n.length;s>i;i++)t=new enchant.Event("touchend"),t.identifier=n[i].identifier,t._initPosition(n[i].pageX,n[i].pageY),e.dispatchEvent(t)},!1)):(this._element.addEventListener("mousedown",function(n){var i=n.pageX,s=n.pageY;n=new enchant.Event("touchstart"),n.identifier=t._mousedownID,n._initPosition(i,s),e.dispatchEvent(n),e._mousedown=!0},!1),t._element.addEventListener("mousemove",function(n){if(e._mousedown){var i=n.pageX,s=n.pageY;n=new enchant.Event("touchmove"),n.identifier=t._mousedownID,n._initPosition(i,s),e.dispatchEvent(n)}},!1),t._element.addEventListener("mouseup",function(n){if(e._mousedown){var i=n.pageX,s=n.pageY;n=new enchant.Event("touchend"),n.identifier=t._mousedownID,n._initPosition(i,s),e.dispatchEvent(n),e._mousedown=!1}},!1))},id:{get:function(){return this._element.id},set:function(t){this._element.id=t}},className:{get:function(){return this._element.className},set:function(t){this._element.className=t}},width:{get:function(){return this._width},set:function(t){this._style.width=(this._width=t)+"px"}},height:{get:function(){return this._height},set:function(t){this._style.height=(this._height=t)+"px"}},backgroundColor:{get:function(){return this._backgroundColor},set:function(t){this._element.style.backgroundColor=this._backgroundColor=t}},opacity:{get:function(){return this._opacity},set:function(t){this._style.opacity=this._opacity=t}},visible:{get:function(){return this._visible},set:function(t){(this._visible=t)?this._style.display="block":this._style.display="none"}},touchEnabled:{get:function(){return this._touchEnabled},set:function(t){(this._touchEnabled=t)?this._style.pointerEvents="all":this._style.pointerEvents="none"}},intersect:function(t){return this._offsetX<t._offsetX+t.width&&t._offsetX<this._offsetX+this.width&&this._offsetY<t._offsetY+t.height&&t._offsetY<this._offsetY+this.height},within:function(t,e){null==e&&(e=(this.width+this.height+t.width+t.height)/4);var n;return(n=this._offsetX-t._offsetX+(this.width-t.width)/2)*n+(n=this._offsetY-t._offsetY+(this.height-t.height)/2)*n<e*e},scale:function(t,e){null==e&&(e=t),this._scaleX*=t,this._scaleY*=e,this._dirty=!0},rotate:function(t){this._rotation+=t,this._dirty=!0},scaleX:{get:function(){return this._scaleX},set:function(t){this._scaleX=t,this._dirty=!0}},scaleY:{get:function(){return this._scaleY},set:function(t){this._scaleY=t,this._dirty=!0}},rotation:{get:function(){return this._rotation},set:function(t){this._rotation=t,this._dirty=!0}}}),enchant.Sprite=enchant.Class.create(enchant.Entity,{initialize:function(t,e){enchant.Entity.call(this),this.width=t,this.height=e,this._scaleX=1,this._scaleY=1,this._rotation=0,this._dirty=!1,this._image=null,this._frame=0,this._frameSequence=[],this._style.overflow="hidden",this.addEventListener("render",function(){if(this._dirty){var t=["rotate(",this._rotation,"deg)","scale(",this._scaleX,",",this._scaleY,")"];-1!==navigator.userAgent.indexOf("iPhone")&&t.push("translate3d(0,0,0)"),this._style[enchant.ENV.VENDOR_PREFIX+"Transform"]=t.join(""),this._dirty=!1}}),this.addEventListener("enterframe",function(){if(0!==this._frameSequence.length){var t=this._frameSequence.shift();null===t?this._frameSequence=[]:(this._setFrame(t),this._frameSequence.push(t))}}),enchant.Game.instance._debug&&(this._style.border="1px solid red",this._style.margin="-1px")},image:{get:function(){return this._image},set:function(t){if(t!==this._image){if(null!=this._image&&(this._image.css?this._style.backgroundImage="":this._element.firstChild&&(this._element.removeChild(this._element.firstChild),this._dirtyListener?(this.removeEventListener("render",this._dirtyListener),this._dirtyListener=null):this._image._parent=null)),null!=t)if(t._css)this._style.backgroundImage=t._css;else if(t._parent){var e=document.createElement("canvas"),n=e.getContext("2d");e.width=t.width,e.height=t.height,n.drawImage(t._element,0,0),this._dirtyListener=function(){t._dirty&&(n.drawImage(t._element),t._dirty=!1)},this.addEventListener("render",this._dirtyListener),this._element.appendChild(e)}else t._parent=this,this._element.appendChild(t._element);this._image=t,this.frame=this.frame}}},frame:{get:function(){return this._frame},set:function(t){if(t instanceof Array){var e=t,n=e.shift();this._setFrame(n),e.push(n),this._frameSequence=e}else this._setFrame(t),this._frameSequence=[],this._frame=t}},_setFrame:function(t){if(null!=this._image){this._frame=t;var e=this._image.width/this._width|0;if(this._image._css)this._style.backgroundPosition=[-(t%e|0)*this._width,"px ",-(t/e|0)*this._height,"px"].join("");else if(this._element.firstChild){var n=this._element.firstChild.style;n.left=-(t%e|0)*this._width+"px",n.top=-(t/e|0)*this._height+"px"}}}}),enchant.Label=enchant.Class.create(enchant.Entity,{initialize:function(t){enchant.Entity.call(this),this.width=300,this.text=t,this.textAlign="left"},text:{get:function(){return this._element.innerHTML},set:function(t){this._element.innerHTML=t}},textAlign:{get:function(){return this._style.textAlign},set:function(t){this._style.textAlign=t}},font:{get:function(){return this._style.font},set:function(t){this._style.font=t}},color:{get:function(){return this._style.color},set:function(t){this._style.color=t}}}),function(){enchant.Map=enchant.Class.create(enchant.Entity,{initialize:function(t,e){var n=enchant.Game.instance;enchant.Entity.call(this);var i=document.createElement("canvas");enchant.ENV.RETINA_DISPLAY&&2===n.scale?(i.width=2*n.width,i.height=2*n.height,this._style.webkitTransformOrigin="0 0",this._style.webkitTransform="scale(0.5)"):(i.width=n.width,i.height=n.height),this._element.appendChild(i),this._context=i.getContext("2d"),this._tileWidth=t||0,this._tileHeight=e||0,this._image=null,this._data=[[[]]],this._dirty=!1,this._tight=!1,this.touchEnabled=!1,this.collisionData=null,this._listeners.render=null,this.addEventListener("render",function(){if(this._dirty||null==this._previousOffsetX)this._dirty=!1,this.redraw(0,0,n.width,n.height);else if(this._offsetX!==this._previousOffsetX||this._offsetY!==this._previousOffsetY)if(this._tight){var t=-this._offsetX,e=-this._offsetY,i=-this._previousOffsetX,s=-this._previousOffsetY,a=t-i+n.width,h=i-t+n.width,o=e-s+n.height,r=s-e+n.height;if(a>this._tileWidth&&h>this._tileWidth&&o>this._tileHeight&&r>this._tileHeight){var c,d,l,u,f,_;h>a?(c=0,l=i-t,f=a):(c=t-i,l=0,f=h),r>o?(d=0,u=s-e,_=o):(d=e-s,u=0,_=r),null==n._buffer&&(n._buffer=document.createElement("canvas"),n._buffer.width=this._context.canvas.width,n._buffer.height=this._context.canvas.height);var p=n._buffer.getContext("2d");this._doubledImage?(p.clearRect(0,0,2*f,2*_),p.drawImage(this._context.canvas,2*c,2*d,2*f,2*_,0,0,2*f,2*_),p=this._context,p.clearRect(2*l,2*u,2*f,2*_),p.drawImage(n._buffer,0,0,2*f,2*_,2*l,2*u,2*f,2*_)):(p.clearRect(0,0,f,_),p.drawImage(this._context.canvas,c,d,f,_,0,0,f,_),p=this._context,p.clearRect(l,u,f,_),p.drawImage(n._buffer,0,0,f,_,l,u,f,_)),0===l?this.redraw(f,0,n.width-f,n.height):this.redraw(0,0,n.width-f,n.height),0===u?this.redraw(0,_,n.width,n.height-_):this.redraw(0,0,n.width,n.height-_)}else this.redraw(0,0,n.width,n.height)}else this.redraw(0,0,n.width,n.height);this._previousOffsetX=this._offsetX,this._previousOffsetY=this._offsetY})},loadData:function(t){this._data=Array.prototype.slice.apply(arguments),this._dirty=!0,this._tight=!1;for(var e=0,n=this._data.length;n>e;e++){var i=0;t=this._data[e];for(var s=0,a=t.length;a>s;s++)for(var h=0,o=t[s].length;o>h;h++)t[s][h]>=0&&i++;if(i/(t.length*t[0].length)>.2){this._tight=!0;break}}},checkTile:function(t,e){if(0>t||this.width<=t||0>e||this.height<=e)return!1;var n=this._image.width,i=this._image.height,s=this._tileWidth||n,a=this._tileHeight||i;t=t/s|0,e=e/a|0;var h=this._data[0];return h[e][t]},hitTest:function(t,e){if(0>t||this.width<=t||0>e||this.height<=e)return!1;var n=this._image.width,i=this._image.height,s=this._tileWidth||n,a=this._tileHeight||i;if(t=t/s|0,e=e/a|0,null!=this.collisionData)return this.collisionData[e]&&!!this.collisionData[e][t];for(var h=0,o=this._data.length;o>h;h++){var r,c=this._data[h];if(null!=c[e]&&null!=(r=c[e][t])&&r>=0&&(n/s|0)*(i/a|0)>r)return!0}return!1},image:{get:function(){return this._image},set:function(t){var e=enchant.Game.instance;if(this._image=t,enchant.ENV.RETINA_DISPLAY&&2===e.scale){for(var n=new enchant.Surface(2*t.width,2*t.height),i=this._tileWidth||t.width,s=this._tileHeight||t.height,a=t.width/i|0,h=t.height/s|0,o=0;h>o;o++)for(var r=0;a>r;r++)n.draw(t,r*i,o*s,i,s,r*i*2,o*s*2,2*i,2*s);this._doubledImage=n}this._dirty=!0}},tileWidth:{get:function(){return this._tileWidth},set:function(t){this._tileWidth=t,this._dirty=!0}},tileHeight:{get:function(){return this._tileHeight},set:function(t){this._tileHeight=t,this._dirty=!0}},width:{get:function(){return this._tileWidth*this._data[0][0].length}},height:{get:function(){return this._tileHeight*this._data[0].length}},redraw:function(t,e,n,i){if(null!=this._image){var s,a,h,o,r;this._doubledImage?(s=this._doubledImage,a=2*this._tileWidth,h=2*this._tileHeight,o=2*-this._offsetX,r=2*-this._offsetY,t*=2,e*=2,n*=2,i*=2):(s=this._image,a=this._tileWidth,h=this._tileHeight,o=-this._offsetX,r=-this._offsetY);var c=s.width/a|0,d=s.height/h|0,l=Math.max((t+o)/a|0,0),u=Math.max((e+r)/h|0,0),f=Math.ceil((t+o+n)/a),_=Math.ceil((e+r+i)/h),p=s._element,v=this._context;v.canvas;v.clearRect(t,e,n,i);for(var m=0,g=this._data.length;g>m;m++){var E=this._data[m],w=Math.min(f,E[0].length),y=Math.min(_,E.length);for(e=u;y>e;e++)for(t=l;w>t;t++){var N=E[e][t];if(N>=0&&c*d>N){var C=N%c*a,b=(N/c|0)*h;v.drawImage(p,C,b,a,h,t*a-o,e*h-r,a,h)}}}}}})}(),enchant.Group=enchant.Class.create(enchant.Node,{initialize:function(){enchant.Node.call(this),this.childNodes=[],this._x=0,this._y=0},addChild:function(t){if(this.childNodes.push(t),t.parentNode=this,t.dispatchEvent(new enchant.Event("added")),this.scene){var e=new enchant.Event("addedtoscene");t.scene=this.scene,t.dispatchEvent(e),t._updateCoordinate();var n,i=document.createDocumentFragment(),s=Array.prototype.push;if(t._element)i.appendChild(t._element);else if(t.childNodes)for(n=t.childNodes.slice().reverse();n.length;)t=n.pop(),t.scene=this.scene,t.dispatchEvent(e),t._element?i.appendChild(t._element):t.childNodes&&s.apply(n,t.childNodes.reverse());if(!i.childNodes.length)return;for(var a,h=this;h.parentNode;){for(n=h.parentNode.childNodes,n=n.slice(n.indexOf(h)+1).reverse();n.length;){if(t=n.pop(),t._element){a=t._element;break}t.childNodes&&s.apply(n,t.childNodes.slice().reverse());
}h=h.parentNode}a?this.scene._element.insertBefore(i,a):this.scene._element.appendChild(i)}},insertBefore:function(t,e){var n=this.childNodes.indexOf(e);if(-1!==n){if(this.childNodes.splice(n,0,t),t.parentNode=this,t.dispatchEvent(new enchant.Event("added")),this.scene){var i=new enchant.Event("addedtoscene");t.scene=this.scene,t.dispatchEvent(i),t._updateCoordinate();var s,a=document.createDocumentFragment(),h=Array.prototype.push;if(t._element)a.appendChild(t._element);else if(t.childNodes)for(s=t.childNodes.slice().reverse();s.length;)t=s.pop(),t.scene=this.scene,t.dispatchEvent(i),t._element?a.appendChild(t._element):t.childNodes&&h.apply(s,t.childNodes.reverse());if(!a.childNodes.length)return;for(var o,r=e;r!==this;){for(null!=n?(s=this.childNodes.slice(n+1).reverse(),n=null):(s=r.parentNode.childNodes,s=s.slice(s.indexOf(r)+1).reverse());s.length;){if(t=s.pop(),t._element){o=t._element;break}t.childNodes&&h.apply(s,t.childNodes.slice().reverse())}r=r.parentNode}o?this.scene._element.insertBefore(a,o):this.scene._element.appendChild(a)}}else this.addChild(t)},removeChild:function(t){var e=this.childNodes.indexOf(t);if(-1!==e&&(this.childNodes.splice(e,1),t.parentNode=null,t.dispatchEvent(new enchant.Event("removed")),this.scene)){var n=new enchant.Event("removedfromscene");if(t.scene=null,t.dispatchEvent(n),t._element)this.scene._element.removeChild(t._element);else if(t.childNodes)for(var i=t.childNodes.slice(),s=Array.prototype.push;i.length;)t=i.pop(),t.scene=null,t.dispatchEvent(n),t._element?this.scene._element.removeChild(t._element):t.childNodes&&s.apply(i,t.childNodes)}},firstChild:{get:function(){return this.childNodes[0]}},lastChild:{get:function(){return this.childNodes[this.childNodes.length-1]}},_updateCoordinate:function(){this.parentNode?(this._offsetX=this.parentNode._offsetX+this._x,this._offsetY=this.parentNode._offsetY+this._y):(this._offsetX=this._x,this._offsetY=this._y);for(var t=0,e=this.childNodes.length;e>t;t++)this.childNodes[t]._updateCoordinate()}}),enchant.RGroup=enchant.Class.create(enchant.Group,{initialize:function(t,e){if(enchant.Group.call(this),arguments.length<2)throw"Width and height of RGroup must be specified";this.width=t,this.height=e,this.rotationOrigin={x:t/2,y:e/2},this._rotation=0},addChild:function(t){enchant.Group.prototype.addChild.apply(this,arguments),t.transformOrigin="0 0"},rotation:{get:function(){return this._rotation},set:function(t){var e=t-this._rotation;if(0!==e){for(var n=e/180*Math.PI,i=Math.sin(n),s=Math.cos(n),a={x:this.width/2,y:this.height/2},h=0,o=this.childNodes.length;o>h;h++){var r=this.childNodes[h];r.rotation-=e;var c=r.x-a.x,d=r.y-a.y;r.x=+s*c+i*d+a.x,r.y=-i*c+s*d+a.y}this._rotation=t}}}}),enchant.Scene=enchant.Class.create(enchant.Group,{initialize:function(){var t=enchant.Game.instance;enchant.Group.call(this),this._element=document.createElement("div"),this._element.style.position="absolute",this._element.style.overflow="hidden",this._element.style.width=(this.width=t.width)+"px",this._element.style.height=(this.height=t.height)+"px",this._element.style[enchant.ENV.VENDOR_PREFIX+"TransformOrigin"]="0 0",this._element.style[enchant.ENV.VENDOR_PREFIX+"Transform"]="scale("+t.scale+")",this.scene=this;var e=this;enchant.ENV.TOUCH_ENABLED?(this._element.addEventListener("touchstart",function(t){for(var n=t.touches,i=0,s=n.length;s>i;i++)t=new enchant.Event("touchstart"),t.identifier=n[i].identifier,t._initPosition(n[i].pageX,n[i].pageY),e.dispatchEvent(t)},!1),this._element.addEventListener("touchmove",function(t){for(var n=t.touches,i=0,s=n.length;s>i;i++)t=new enchant.Event("touchmove"),t.identifier=n[i].identifier,t._initPosition(n[i].pageX,n[i].pageY),e.dispatchEvent(t)},!1),this._element.addEventListener("touchend",function(t){for(var n=t.changedTouches,i=0,s=n.length;s>i;i++)t=new enchant.Event("touchend"),t.identifier=n[i].identifier,t._initPosition(n[i].pageX,n[i].pageY),e.dispatchEvent(t)},!1)):(this._element.addEventListener("mousedown",function(n){var i=n.pageX,s=n.pageY;n=new enchant.Event("touchstart"),n.identifier=t._mousedownID,n._initPosition(i,s),e.dispatchEvent(n),e._mousedown=!0},!1),t._element.addEventListener("mousemove",function(n){if(e._mousedown){var i=n.pageX,s=n.pageY;n=new enchant.Event("touchmove"),n.identifier=t._mousedownID,n._initPosition(i,s),e.dispatchEvent(n)}},!1),t._element.addEventListener("mouseup",function(n){if(e._mousedown){var i=n.pageX,s=n.pageY;n=new enchant.Event("touchend"),n.identifier=t._mousedownID,n._initPosition(i,s),e.dispatchEvent(n),e._mousedown=!1}},!1))},backgroundColor:{get:function(){return this._backgroundColor},set:function(t){this._element.style.backgroundColor=this._backgroundColor=t}},_updateCoordinate:function(){this._offsetX=this._x,this._offsetY=this._y;for(var t=0,e=this.childNodes.length;e>t;t++)this.childNodes[t]._updateCoordinate()}}),function(){enchant.CanvasGroup=enchant.Class.create(enchant.Group,{initialize:function(){var t=enchant.Game.instance,n=this;enchant.Group.call(this),this._dirty=!1,this._rotation=0,this._cvsCache={},this._cvsCache.matrix=[1,0,0,1,0,0],this._cvsCache.detectColor="#000000",this.width=t.width,this.height=t.height;var i=[enchant.Event.ADDED_TO_SCENE,enchant.Event.REMOVED_FROM_SCENE];i.forEach(function(t){this.addEventListener(t,function(t){this.childNodes.forEach(function(e){e.scene=this.scene,e.dispatchEvent(t)},this)})},this),this._element=document.createElement("canvas"),this._element.width=t.width,this._element.height=t.height,this._element.style.position="absolute",this._detect=document.createElement("canvas"),this._detect.width=t.width,this._detect.height=t.height,this._detect.style.position="absolute",this.context=this._element.getContext("2d"),this._dctx=this._detect.getContext("2d"),this._colorManager=new o(16,256),enchant.ENV.TOUCH_ENABLED?(this._element.addEventListener("touchstart",function(t){for(var e=t.touches,i=0,a=e.length;a>i;i++)t=new enchant.Event("touchstart"),t.identifier=e[i].identifier,t._initPosition(e[i].pageX,e[i].pageY),s.call(n,t)},!1),this._element.addEventListener("touchmove",function(t){for(var e=t.touches,i=0,s=e.length;s>i;i++)t=new enchant.Event("touchmove"),t.identifier=e[i].identifier,t._initPosition(e[i].pageX,e[i].pageY),a.call(n,t)},!1),this._element.addEventListener("touchend",function(t){for(var e=t.changedTouches,i=0,s=e.length;s>i;i++)t=new enchant.Event("touchend"),t.identifier=e[i].identifier,t._initPosition(e[i].pageX,e[i].pageY),h.call(n,t)},!1)):(this._element.addEventListener("mousedown",function(e){var i=e.pageX,a=e.pageY;e=new enchant.Event("touchstart"),e.identifier=t._mousedownID,e._initPosition(i,a),s.call(n,e),n._mousedown=!0},!1),t._element.addEventListener("mousemove",function(e){if(n._mousedown){var i=e.pageX,s=e.pageY;e=new enchant.Event("touchmove"),e.identifier=t._mousedownID,e._initPosition(i,s),a.call(n,e)}},!1),t._element.addEventListener("mouseup",function(e){if(n._mousedown){var i=e.pageX,s=e.pageY;e=new enchant.Event("touchend"),e.identifier=t._mousedownID,e._initPosition(i,s),h.call(n,e),n._mousedown=!1}},!1));var r=[enchant.Event.ENTER,enchant.Event.ADDED_TO_SCENE],c=[enchant.Event.EXIT,enchant.Event.REMOVED_FROM_SCENE];r.forEach(function(t){this.addEventListener(t,this._startRendering),this.addEventListener(t,function(){e.push(this)})},this),c.forEach(function(t){this.addEventListener(t,this._stopRendering),this.addEventListener(t,function(){var t=e.indexOf(this);-1!==t&&e.splice(t,1)})},this),this._onexitframe=function(){var e=n.context;e.clearRect(0,0,t.width,t.height),y.call(n,n._colorManager),_.call(n,e)}},_startRendering:function(){var t=enchant.Game.instance;t._listeners.exitframe||(t._listeners.exitframe=[]),t._listeners.exitframe.push(this._onexitframe)},_stopRendering:function(){var t=enchant.Game.instance;t.removeEventListener("exitframe",this._onexitframe)},_getEntityByPosition:function(t,e){var n=this._dctx;n.clearRect(0,0,this.width,this.height),m.call(this,n);var i=n.getImageData(t,e,1,1).data;return this._colorManager.getSpriteByColor(i)},_touchstartPropagation:function(t){var e=this._getEntityByPosition(t.x,t.y);return e?(this._touching=e,b.call(this._touching,t,this.parentNode)):e=null,e},_touchmovePropagation:function(t){null!=this._touching&&b.call(this._touching,t,this.parentNode)},_touchendPropagation:function(t){null!=this._touching&&(b.call(this._touching,t,this.parentNode),this._touching=null)},rotation:{get:function(){return this._rotation},set:function(t){this._rotation=t,this._dirty=!0}},scaleX:{get:function(){return this._scaleX},set:function(t){this._scaleX=t,this._dirty=!0}},scaleY:{get:function(){return this._scaleY},set:function(t){this._scaleY=t,this._dirty=!0}},addChild:function(t){if(this.childNodes.push(t),t.parentNode=this,t.dispatchEvent(new enchant.Event("added")),this.scene){t.scene=this.scene;var e=new enchant.Event("addedtoscene");N.call(t,e,this._colorManager)}},insertBefore:function(t,e){var n=this.childNodes.indexOf(e);if(-1!==n){if(this.childNodes.splice(n,0,t),t.dispatchEvent(new enchant.Event("added")),this.scene){t.scene=this.scene;var i=new enchant.Event("addedtoscene");N.call(t,i,this._colorManager)}}else this.addChild(t)},removeChild:function(t){var e;if(-1!==(e=this.childNodes.indexOf(t))&&this.childNodes.splice(e,1),t.parentNode=null,t.dispatchEvent(new enchant.Event("removed")),this.scene){t.scene=null;var n=new enchant.Event("removedfromscene");C.call(t,n,this._colorManager)}}});var t=0,e=[],n=null,i=null,s=function(t){for(var s,a=enchant.Game.instance,h=e.length-1;h>=0;h--)if(s=e[h],s.scene===a.currentScene){var o=s._touchstartPropagation(t);if(o)return n=o,void(i=s)}},a=function(t){null!=i&&i._touchmovePropagation(t)},h=function(t){null!=i&&(i._touchendPropagation(t),n=null,i=null)};enchant.widget&&(enchant.widget.EntityGroup.prototype.cvsRender=function(e){this.background&&this.background._element.width>0&&this.background._element.height>0&&e.drawImage(this.background._element,t,t,this.width+t,this.height+t),e.beginPath(),e.rect(0,0,this.width,this.height),e.clip()}),enchant.Map.prototype.cvsRender=function(t){var e=enchant.Game.instance;t.save(),t.setTransform(1,0,0,1,0,0);var n=this._element.firstChild;t.drawImage(n,0,0,e.width,e.height),t.restore()},enchant.Sprite.prototype.cvsRender=function(e){var n,i,s,a,h,o,r,c;this._image&&(a=Math.abs(this._frame)||0,n=this._image,i=n._element,s=n.width/this._width|0,h=(a%s|0)*this._width,o=(a/s|0)*this._height%n.height,o=Math.min(o,n.height-this._height),r=Math.min(n.width-h,this._width),c=Math.min(n.height-o,this._height),e.drawImage(i,h,o,r,c,t,t,this._width+t,this._height+t))},enchant.Label.prototype.cvsRender=function(e){this.text&&(e.textBaseline="top",e.font=this.font,e.fillStyle=this.color||"#000000",e.fillText(this.text,t,t,this.width+t))};var o=enchant.Class.create({initialize:function(t,e){this.reference=[],this.detectColorNum=0,this.colorResolution=t||16,this.max=e||1},attachDetectColor:function(t){return this.detectColorNum+=1,this.reference[this.detectColorNum]=t,this._createNewColor()},detachDetectColor:function(t){var e=this.reference.indexOf(t);-1!==e&&(this.reference[e]=null)},_createNewColor:function(){var t=this.detectColorNum,e=this.colorResolution,n=e/this.max;return[parseInt(t/e/e%e,10)/n,parseInt(t/e%e,10)/n,parseInt(t%e,10)/n,1]},_decodeDetectColor:function(t){var e=this.colorResolution;return~~(t[0]*e*e*e/256)+~~(t[1]*e*e/256)+~~(t[2]*e/256)},getSpriteByColor:function(t){return this.reference[this._decodeDetectColor(t)]}}),r=function(t,e){t=t||function(){},e=e||function(){};var n=function(){t.apply(this,arguments);var i;if(this.childNodes)for(var s=0,a=this.childNodes.length;a>s;s++)i=this.childNodes[s],n.apply(i,arguments);e.apply(this,arguments)};return n},c=function(t,e){var n=t.x,i=t.y,s=t.width||0,a=t.height||0,h=t.rotation||0,o="number"==typeof t.scaleX?t.scaleX:1,r="number"==typeof t.scaleY?t.scaleY:1,c=Math.PI*h/180,d=Math.cos(c),l=Math.sin(c),u="number"==typeof t.originX?t.originX:s/2,f="number"==typeof t.originY?t.originY:a/2,_=o*d,p=o*l,v=r*l,m=r*d;e[0]=o*d,e[1]=o*l,e[2]=-r*l,e[3]=r*d,e[4]=-_*u+v*f+n+u,e[5]=-p*u-m*f+i+f},d=function(t){(t.__dirty||t._cvsCache.x!==t.x||t._cvsCache.y!==t.y||t._cvsCache.width!==t.width||t._cvsCache.height!==t.height)&&(c(t,t._cvsCache.matrix),t.__dirty=!1,t._cvsCache.x=t.x,t._cvsCache.y=t.y,t._cvsCache.width=t.width,t._cvsCache.height=t.height)},l=function(t,e){e.alphaBlending?t.globalCompositeOperation=e.alphaBlending:t.globalCompositeOperation="source-atob",t.globalAlpha=e.opacity||1},u=function(t,e){d(e),t.transform.apply(t,e._cvsCache.matrix)},f=function(e,n){var i=enchant.Game.instance;n.backgroundColor&&(e.fillStyle=n.backgroundColor,e.fillRect(t,t,n.width+t,n.height+t)),n.cvsRender&&n.cvsRender(e),i._debug&&(n instanceof enchant.Label||n instanceof enchant.Sprite?e.strokeStyle="#ff0000":e.strokeStyle="#0000ff",e.strokeRect(t,t,n.width+t,n.height+t))},_=r(function(t){t.save(),l(t,this),u(t,this),f(t,this)},function(t){t.restore()}),p=function(t){return"#"+("00"+Number(parseInt(t[0],10)).toString(16)).slice(-2)+("00"+Number(parseInt(t[1],10)).toString(16)).slice(-2)+("00"+Number(parseInt(t[2],10)).toString(16)).slice(-2)},v=function(t,e){t.fillStyle=e._cvsCache.detectColor,t.fillRect(0,0,e.width,e.height)},m=r(function(t){t.save(),u(t,this),v(t,this)},function(t){t.restore()}),g=function(){this._dirty?this.__dirty=!0:this.__dirty=!1},E=function(t){this._cvsCache||(this.addEventListener("render",g),this._cvsCache={},this._cvsCache.matrix=[],this._cvsCache.detectColor=p(t.attachDetectColor(this)))},w=function(t){this._cvsCache&&(this.removeEventListener("render",g),t.detachDetectColor(this),delete this._cvsCache)},y=r(function(t){E.call(this,t)}),N=r(function(t,e){this.dispatchEvent(t),E.call(this,e)}),C=r(function(t,e){this.dispatchEvent(t),w.call(this,e)}),b=(r(function(t){this.dispatchEvent(t)}),function(t,e){this.dispatchEvent(t),this.parentNode&&this.parentNode!==e&&b.call(this.parentNode,t,e)})}(),enchant.Scene=enchant.Class.create(enchant.Group,{initialize:function(){enchant.Group.call(this),this._element=document.createElement("div"),this._element.style.position="absolute",this._element.style.overflow="hidden",this._element.style.width=(this.width=enchant.Game.instance.width)+"px",this._element.style.height=(this.height=enchant.Game.instance.height)+"px",this._element.style[enchant.ENV.VENDOR_PREFIX+"TransformOrigin"]="0 0",this._element.style[enchant.ENV.VENDOR_PREFIX+"Transform"]="scale("+enchant.Game.instance.scale+")",this.scene=this;var t=this;enchant.ENV.TOUCH_ENABLED?(this._element.addEventListener("touchstart",function(e){for(var n=e.touches,i=0,s=n.length;s>i;i++)e=new enchant.Event("touchstart"),e.identifier=n[i].identifier,e._initPosition(n[i].pageX,n[i].pageY),t.dispatchEvent(e)},!1),this._element.addEventListener("touchmove",function(e){for(var n=e.touches,i=0,s=n.length;s>i;i++)e=new enchant.Event("touchmove"),e.identifier=n[i].identifier,e._initPosition(n[i].pageX,n[i].pageY),t.dispatchEvent(e)},!1),this._element.addEventListener("touchend",function(e){for(var n=e.changedTouches,i=0,s=n.length;s>i;i++)e=new enchant.Event("touchend"),e.identifier=n[i].identifier,e._initPosition(n[i].pageX,n[i].pageY),t.dispatchEvent(e)},!1)):(this._element.addEventListener("mousedown",function(e){var n=e.pageX,i=e.pageY;e=new enchant.Event("touchstart"),e.identifier=enchant.Game.instance._mousedownID,e._initPosition(n,i),t.dispatchEvent(e),t._mousedown=!0},!1),enchant.Game.instance._element.addEventListener("mousemove",function(e){if(t._mousedown){var n=e.pageX,i=e.pageY;e=new enchant.Event("touchmove"),e.identifier=enchant.Game.instance._mousedownID,e._initPosition(n,i),t.dispatchEvent(e)}},!1),enchant.Game.instance._element.addEventListener("mouseup",function(e){if(t._mousedown){var n=e.pageX,i=e.pageY;e=new enchant.Event("touchend"),e.identifier=enchant.Game.instance._mousedownID,e._initPosition(n,i),t.dispatchEvent(e),t._mousedown=!1}},!1))},backgroundColor:{get:function(){return this._backgroundColor},set:function(t){this._element.style.backgroundColor=this._backgroundColor=t}},_updateCoordinate:function(){this._offsetX=this._x,this._offsetY=this._y;for(var t=0,e=this.childNodes.length;e>t;t++)this.childNodes[t]._updateCoordinate()}}),enchant.Surface=enchant.Class.create(enchant.EventTarget,{initialize:function(t,e){enchant.EventTarget.call(this);var n=enchant.Game.instance;this.width=t,this.height=e,this.context=null;var i="enchant-surface"+n._surfaceID++;if(document.getCSSCanvasContext){this.context=document.getCSSCanvasContext("2d",i,t,e),this._element=this.context.canvas,this._css="-webkit-canvas("+i+")";this.context}else document.mozSetImageElement?(this._element=document.createElement("canvas"),this._element.width=t,this._element.height=e,this._css="-moz-element(#"+i+")",this.context=this._element.getContext("2d"),document.mozSetImageElement(i,this._element)):(this._element=document.createElement("canvas"),this._element.width=t,this._element.height=e,this._element.style.position="absolute",this.context=this._element.getContext("2d"),enchant.ENV.CANVAS_DRAWING_METHODS.forEach(function(t){var e=this.context[t];this.context[t]=function(){e.apply(this,arguments),this._dirty=!0}},this))},getPixel:function(t,e){return this.context.getImageData(t,e,1,1).data},setPixel:function(t,e,n,i,s,a){var h=this.context.createImageData(1,1);h.data[0]=n,h.data[1]=i,h.data[2]=s,h.data[3]=a,this.context.putImageData(h,t,e)},clear:function(){this.context.clearRect(0,0,this.width,this.height)},draw:function(t){if(t=t._element,1===arguments.length)this.context.drawImage(t,0,0);else{var e=arguments;e[0]=t,this.context.drawImage.apply(this.context,e)}},clone:function(){var t=new enchant.Surface(this.width,this.height);return t.draw(this),t},toDataURL:function(){var t=this._element.src;return t?"data:"===t.slice(0,5)?t:this.clone().toDataURL():this._element.toDataURL()}}),enchant.Surface.load=function(t){var e=new Image,n=Object.create(enchant.Surface.prototype,{context:{value:null},_css:{value:"url(+t+)"},_element:{value:e}});return enchant.EventTarget.call(n),e.src=t,e.onerror=function(){throw new Error("Cannot load an asset: "+e.src)},e.onload=function(){n.width=e.width,n.height=e.height,n.dispatchEvent(new enchant.Event("load"))},n},enchant.Sound=enchant.Class.create(enchant.EventTarget,{initialize:function(){throw enchant.EventTarget.call(this),this.duration=0,new Error("Illegal Constructor")},play:function(){this._element&&this._element.play()},pause:function(){this._element&&this._element.pause()},stop:function(){this.pause(),this.currentTime=0},clone:function(){var t;if(this._element instanceof Audio)t=Object.create(enchant.Sound.prototype,{_element:{value:this._element.cloneNode(!1)},duration:{value:this.duration}});else{if(enchant.ENV.USE_FLASH_SOUND)return this;t=Object.create(enchant.Sound.prototype)}return enchant.EventTarget.call(t),t},currentTime:{get:function(){return this._element?this._element.currentTime:0},set:function(t){this._element&&(this._element.currentTime=t)}},volume:{get:function(){return this._element?this._element.volume:1},set:function(t){this._element&&(this._element.volume=t)}}}),enchant.Sound.load=function(t,e){if(null==e){var n=enchant.Game.findExt(t);e=n?"audio/"+n:""}e=e.replace("mp3","mpeg").replace("m4a","mp4");var i=Object.create(enchant.Sound.prototype);enchant.EventTarget.call(i);var s=new Audio;if(!enchant.Sound.enabledInMobileSafari&&"webkit"===enchant.ENV.VENDOR_PREFIX&&enchant.ENV.TOUCH_ENABLED)window.setTimeout(function(){i.dispatchEvent(new enchant.Event("load"))},0);else if(!enchant.ENV.USE_FLASH_SOUND&&s.canPlayType(e))s.src=t,s.load(),s.autoplay=!1,s.onerror=function(){throw new Error("Cannot load an asset: "+s.src)},s.addEventListener("canplaythrough",function(){i.duration=s.duration,i.dispatchEvent(new enchant.Event("load"))},!1),i._element=s;else if("audio/mpeg"===e){var a=document.createElement("embed"),h="enchant-audio"+enchant.Game.instance._soundID++;a.width=a.height=1,a.name=h,a.src="sound.swf?id="+h+"&src="+t,a.allowscriptaccess="always",a.style.position="absolute",a.style.left="-1px",i.addEventListener("load",function(){Object.defineProperties(a,{currentTime:{get:function(){return a.getCurrentTime()},set:function(t){a.setCurrentTime(t)}},volume:{get:function(){return a.getVolume()},set:function(t){a.setVolume(t)}}}),i._element=a,i.duration=a.getDuration()}),enchant.Game.instance._element.appendChild(a),enchant.Sound[h]=i}else window.setTimeout(function(){i.dispatchEvent(new enchant.Event("load"))},0);return i},enchant.Sound.enabledInMobileSafari=!1;
/**
 * enchant.js v0.5.1
 *
 * Copyright (c) Ubiquitous Entertainment Inc.
 * Dual licensed under the MIT or GPL Version 3 licenses
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

if (typeof Object.defineProperty !== 'function') {
    Object.defineProperty = function(obj, prop, desc) {
        if ('value' in desc) {
            obj[prop] = desc.value;
        }
        if ('get' in desc) {
            obj.__defineGetter__(prop, desc.get);
        }
        if ('set' in desc) {
            obj.__defineSetter__(prop, desc.set);
        }
        return obj;
    };
}
if (typeof Object.defineProperties !== 'function') {
    Object.defineProperties = function(obj, descs) {
        for (var prop in descs) {
            if (descs.hasOwnProperty(prop)) {
                Object.defineProperty(obj, prop, descs[prop]);
            }
        }
        return obj;
    };
}
if (typeof Object.create !== 'function') {
    Object.create = function(prototype, descs) {
        function F() {
        }

        F.prototype = prototype;
        var obj = new F();
        if (descs != null){
            Object.defineProperties(obj, descs);
        }
        return obj;
    };
}
if (typeof Object.getPrototypeOf !== 'function') {
    Object.getPrototypeOf = function(obj) {
        return obj.__proto__;
    };
}

if (typeof Function.prototype.bind !== 'function') {
    Function.prototype.bind = function(thisObject) {
        var func = this;
        var args = Array.prototype.slice.call(arguments, 1);
        var Nop = function() {
        };
        var bound = function() {
            var a = args.concat(Array.prototype.slice.call(arguments));
            return func.apply(
                this instanceof Nop ? this : thisObject || window, a);
        };
        Nop.prototype = func.prototype;
        bound.prototype = new Nop();
        return bound;
    };
}

/**
 * Export library classes globally.
 *
 * When no arguments are delivered, all classes defined in enchant.js as well as all classes defined in
 * plugins will be exported. When more than one argument is delivered, by default only classes defined
 * in enchant.js will be exported. When you wish to export plugin classes you must explicitly deliver  *  * plugin identifiers as arguments.
 *
 * @example
 *   enchant();     // All classes will be exported.
 *   enchant('');   // Only classes in enchant.js will be exported.
 *   enchant('ui'); // enchant.js classes and ui.enchant.js classes will be exported.
 *
 * @param {...String} [modules] Export module. Multiple designations possible.
 */
var enchant = function(modules) {
    if (modules != null) {
        if (!(modules instanceof Array)) {
            modules = Array.prototype.slice.call(arguments);
        }
        modules = modules.filter(function(module) {
            return [module].join();
        });
    }
    (function include(module, prefix) {
        var submodules = [],
            i, len;
        for (var prop in module){
            if (module.hasOwnProperty(prop)) {
                if (typeof module[prop] === 'function') {
                    window[prop] = module[prop];
                } else if (typeof module[prop] === 'object' && Object.getPrototypeOf(module[prop]) === Object.prototype) {
                    if (modules == null) {
                        submodules.push(prop);
                    } else {
                        i = modules.indexOf(prefix + prop);
                        if (i !== -1) {
                            submodules.push(prop);
                            modules.splice(i, 1);
                        }
                    }
                }
            }
        }

        for (i = 0, len = submodules.length; i < len; i++) {
            include(module[submodules[i]], prefix + submodules[i] + '.');
        }
    }(enchant, ''));

    if (modules != null && modules.length) {
        throw new Error('Cannot load module: ' + modules.join(','));
    }
};

window.addEventListener("message", function(msg, origin) {
    try {
        var data = JSON.parse(msg.data);
        if (data.type === "event") {
            enchant.Game.instance.dispatchEvent(new enchant.Event(data.value));
        } else if (data.type === "debug") {
            switch (data.value) {
                case "start":
                    enchant.Game.instance.start();
                    break;
                case "pause":
                    enchant.Game.instance.pause();
                    break;
                case "resume":
                    enchant.Game.instance.resume();
                    break;
                case "tick":
                    enchant.Game.instance._tick();
                    break;
                default:
                    break;
            }
        }
    } catch (e) {
        // ignore
    }
}, false);

/**
 * Class Classes
 *
 * @param {Function} [superclass] Successor class.
 * @param {*} definition Class definition.
 * @constructor
 */
enchant.Class = function(superclass, definition) {
    return enchant.Class.create(superclass, definition);
};

/**
 * Create class.
 *
 * When making classes that succeed other classes, the previous class is used as a base with
 * constructor as default. In order to override the constructor, it is necessary to explicitly
 * call up the previous constructor to use it.
 *
 * @example
 *   var Ball = Class.create({ // Creates independent class.
 *       initialize: function(radius) { ... }, // Method definition.
 *       fall: function() { ... }
 *   });
 *
 *   var Ball = Class.create(Sprite);  // Creates a class succeeding "Sprite"
 *   var Ball = Class.create(Sprite, { // Creates a class succeeding "Sprite"
 *       initialize: function(radius) { // Overwrites constructor
 *          Sprite.call(this, radius*2, radius*2); // Applies previous constructor.
 *          this.image = game.assets['ball.gif'];
 *       }
 *   });
 *
 * @param {Function} [superclass] Preceding class.
 * @param {*} [definition] Class definition.
 * @static
 */
enchant.Class.create = function(superclass, definition) {
    if (arguments.length === 0) {
        return enchant.Class.create(Object, definition);
    } else if (arguments.length === 1 && typeof arguments[0] !== 'function') {
        return enchant.Class.create(Object, arguments[0]);
    }

    for (var prop in definition){
        if (definition.hasOwnProperty(prop)) {
            if (typeof definition[prop] === 'object' && Object.getPrototypeOf(definition[prop]) === Object.prototype) {
                if (!('enumerable' in definition[prop])){
                    definition[prop].enumerable = true;
                }
            } else {
                definition[prop] = { value: definition[prop], enumerable: true, writable: true };
            }
        }
    }
    var Constructor = function() {
        if (this instanceof Constructor) {
            Constructor.prototype.initialize.apply(this, arguments);
        } else {
            return new Constructor();
        }
    };
    Constructor.prototype = Object.create(superclass.prototype, definition);
    Constructor.prototype.constructor = Constructor;
    if (Constructor.prototype.initialize == null) {
        Constructor.prototype.initialize = function() {
            superclass.apply(this, arguments);
        };
    }

    return Constructor;
};
/**
 */
enchant.ENV = {
    /**
     * css vendor prefix in current browser
     * @type {String}
     */
    VENDOR_PREFIX: (function() {
        var ua = navigator.userAgent;
        if (ua.indexOf('Opera') !== -1) {
            return 'O';
        } else if (ua.indexOf('MSIE') !== -1) {
            return 'ms';
        } else if (ua.indexOf('WebKit') !== -1) {
            return 'webkit';
        } else if (navigator.product === 'Gecko') {
            return 'Moz';
        } else {
            return '';
        }
    }()),
    /**
     * CSS vendor prefix in current browser
     * @type {String}
     */
    TOUCH_ENABLED: (function() {
        var div = document.createElement('div');
        div.setAttribute('ontouchstart', 'return');
        return typeof div.ontouchstart === 'function';
    }()),
    /**
     * Is this browser iPhone with Retina display?
     * @type {String}
     */
    RETINA_DISPLAY: (function() {
        if (navigator.userAgent.indexOf('iPhone') !== -1 && window.devicePixelRatio === 2) {
            var viewport = document.querySelector('meta[name=viewport]');
            if (viewport == null) {
                viewport = document.createElement('meta');
                document.head.appendChild(viewport);
            }
            viewport.setAttribute('content', 'width=640');
            return true;
        } else {
            return false;
        }
    }()),
    /**
     * Use Flash instead of native Audio class?
     * @type {String}
     */
    USE_FLASH_SOUND: (function() {
        var ua = navigator.userAgent;
        var vendor = navigator.vendor || "";
        return (location.href.indexOf('http') === 0 && ua.indexOf('Mobile') === -1 && vendor.indexOf('Apple') !== -1);
    }()),
    /**
     * On click/touch event in these tags, setPreventDefault() will not be called
     */
    USE_DEFAULT_EVENT_TAGS: ['input', 'textarea', 'select', 'area'],
    CANVAS_DRAWING_METHODS: [
        'putImageData', 'drawImage', 'drawFocusRing', 'fill', 'stroke',
        'clearRect', 'fillRect', 'strokeRect', 'fillText', 'strokeText'
    ]
};
/**
 * @scope enchant.Event.prototype
 */
enchant.Event = enchant.Class.create({
    /**
     * A class for independent event implementation like DOM Events.
     * However, does not include phase concept.
     * @param {String} type Event type.
     * @constructs
     */
    initialize: function(type) {
        /**
         * Event type.
         * @type {String}
         */
        this.type = type;
        /**
         * Event target.
         * @type {*}
         */
        this.target = null;
        /**
         * Event occurrence's x coordinates. * @type {Number} */this.x = 0; this.y = 0; this.localX = 0; this.localY = 0; },_initPosition: function(pageX,pageY) { var game = enchant.Game.instance; this.x = this.localX = (pageX - game._pageX)/game.scale; this.y = this.localY = (pageY - game._pageY)/game.scale; }}); enchant.Event.LOAD = 'load'; enchant.Event.PROGRESS = 'progress'; enchant.Event.ENTER_FRAME = 'enterframe'; enchant.Event.EXIT_FRAME = 'exitframe'; enchant.Event.ENTER = 'enter'; enchant.Event.EXIT = 'exit'; enchant.Event.ADDED = 'added'; enchant.Event.ADDED_TO_SCENE = 'addedtoscene'; enchant.Event.REMOVED = 'removed'; enchant.Event.REMOVED_FROM_SCENE = 'removedfromscene'; enchant.Event.TOUCH_START = 'touchstart'; enchant.Event.TOUCH_MOVE = 'touchmove'; enchant.Event.TOUCH_END = 'touchend'; enchant.Event.RENDER = 'render'; enchant.Event.INPUT_START = 'inputstart'; enchant.Event.INPUT_CHANGE = 'inputchange'; enchant.Event.INPUT_END = 'inputend'; enchant.Event.LEFT_BUTTON_DOWN = 'leftbuttondown'; enchant.Event.LEFT_BUTTON_UP = 'leftbuttonup'; enchant.Event.RIGHT_BUTTON_DOWN = 'rightbuttondown'; enchant.Event.RIGHT_BUTTON_UP = 'rightbuttonup'; enchant.Event.UP_BUTTON_DOWN = 'upbuttondown'; enchant.Event.UP_BUTTON_UP = 'upbuttonup'; enchant.Event.DOWN_BUTTON_DOWN = 'downbuttondown'; enchant.Event.DOWN_BUTTON_UP = 'downbuttonup'; enchant.Event.A_BUTTON_DOWN = 'abuttondown'; enchant.Event.A_BUTTON_UP = 'abuttonup'; enchant.Event.B_BUTTON_DOWN = 'bbuttondown'; enchant.Event.B_BUTTON_UP = 'bbuttonup'; enchant.EventTarget = enchant.Class.create({initialize:function() { this._listeners = {}; },addEventListener: function(type,listener) { var listeners = this._listeners[type]; if (listeners == null) { this._listeners[type] = [listener]; } else if (listeners.indexOf(listener) === -1) { listeners.unshift(listener); } },on: function() { this.addEventListener.apply(this,arguments); },removeEventListener: function(type,listener) { var listeners = this._listeners[type]; if (listeners != null) { var i = listeners.indexOf(listener); if (i !== -1) { listeners.splice(i,1); } } },clearEventListener: function(type) { if (type != null) { delete this._listeners[type]; } else { this._listeners = {}; } },dispatchEvent: function(e) { e.target = this; e.localX = e.x - this._offsetX; e.localY = e.y - this._offsetY; if (this['on' + e.type] != null) { this['on' + e.type](e); } var listeners = this._listeners[e.type]; if (listeners != null) { listeners = listeners.slice(); for (var i = 0,len = listeners.length; i < len; i++) { listeners[i].call(this,e); } } }},()); enchant.Node = enchant.Class.create(enchant.EventTarget{initialize:function() { enchant.EventTarget.call(this); this._x = 0; this._y = 0; this._offsetX = 0; this._offsetY = 0; this.age = 0; this.parentNode = null; this.scene = null; this.addEventListener('touchstart',function(e) { if (this.parentNode && !this.parentNode._element) { this.parentNode.dispatchEvent(e); } }); this.addEventListener('touchmove',function(e) { if (this.parentNode && !this.parentNode._element) { this.parentNode.dispatchEvent(e); } }); this.addEventListener('touchend',function(e) { if (this.parentNode && !this.parentNode._element) { this.parentNode.dispatchEvent(e); } }); },moveTo: function(x,y) { this._x = x; this._y = y; this._updateCoordinate(); },moveBy: function(x,y) { this._x += x; this._y += y; this._updateCoordinate(); },x: { get: function() { return this._x; },set: function(x) { this._x = x; this._updateCoordinate(); } },y: { get: function() { return this._y; },set: function(y) { this._y = y; this._updateCoordinate(); } },_updateCoordinate: function() { if (this.parentNode) { this._offsetX = this.parentNode._offsetX + this._x; this._offsetY = this.parentNode._offsetY + this._y; } else { this._offsetX = this._x; this._offsetY = this._y; } },remove: function() { if (this._listener) { this.clearEventListener(); } if (this.parentNode) { this.parentNode.removeChild(this); } }},); enchant.Entity = enchant.Class.create(enchant.Node{initialize:function() { var game = enchant.Game.instance; enchant.Node.call(this); this._element = document.createElement('div'); this._style = this._element.style; this._style.position = 'absolute'; this._width = 0; this._height = 0; this._backgroundColor = null; this._opacity = 1; this._visible = true; this._buttonMode = null; if (enchant.Game.instance._debug) { this._style.border = "1px solid blue"; this._style.margin = "-1px"; } this.buttonMode = null; this.buttonPressed = false; this.addEventListener('touchstart',function() { if (!this.buttonMode) { return; } this.buttonPressed = true; var e = new enchant.Event(this.buttonMode + 'buttondown'); this.dispatchEvent(e); game.dispatchEvent(e); }); this.addEventListener('touchend',function() { if (!this.buttonMode) { return; } this.buttonPressed = false; var e = new enchant.Event(this.buttonMode + 'buttonup'); this.dispatchEvent(e); game.dispatchEvent(e); }); var that = this; var render = function() { that.dispatchEvent(new enchant.Event('render')); }; this.addEventListener('addedtoscene',function() { render(); game.addEventListener('exitframe',render); }); this.addEventListener('removedfromscene',function() { game.removeEventListener('exitframe',render); }); this.addEventListener('render',function() { if (this._offsetX !== this._previousOffsetX) { this._style.left = this._offsetX + 'px'; } if (this._offsetY !== this._previousOffsetY) { this._style.top = this._offsetY + 'px'; } this._previousOffsetX = this._offsetX; this._previousOffsetY = this._offsetY; }); if (enchant.ENV.TOUCH_ENABLED) { this._element.addEventListener('touchstart',function(e) { var touches = e.touches; for (var i = 0,len = touches.length; i < len; i++) { e = new enchant.Event('touchstart'); e.identifier = touches[i].identifier; e._initPosition(touches[i].pageX,touches[i].pageY); that.dispatchEvent(e); } },false); this._element.addEventListener('touchmove',function(e) { var touches = e.touches; for (var i = 0,len = touches.length; i < len; i++) { e = new enchant.Event('touchmove'); e.identifier = touches[i].identifier; e._initPosition(touches[i].pageX,touches[i].pageY); that.dispatchEvent(e); } },false); this._element.addEventListener('touchend',function(e) { var touches = e.changedTouches; for (var i = 0,len = touches.length; i < len; i++) { e = new enchant.Event('touchend'); e.identifier = touches[i].identifier; e._initPosition(touches[i].pageX,touches[i].pageY); that.dispatchEvent(e); } },false); } else { this._element.addEventListener('mousedown',function(e) { var x = e.pageX; var y = e.pageY; e = new enchant.Event('touchstart'); e.identifier = game._mousedownID; e._initPosition(x,y); that.dispatchEvent(e); that._mousedown = true; },false); game._element.addEventListener('mousemove',function(e) { if (!that._mousedown) { return; } var x = e.pageX; var y = e.pageY; e = new enchant.Event('touchmove'); e.identifier = game._mousedownID; e._initPosition(x,y); that.dispatchEvent(e); },false); game._element.addEventListener('mouseup',function(e) { if (!that._mousedown) { return; } var x = e.pageX; var y = e.pageY; e = new enchant.Event('touchend'); e.identifier = game._mousedownID; e._initPosition(x,y); that.dispatchEvent(e); that._mousedown = false; },false); } },id: { get: function() { return this._element.id; },set: function(id) { this._element.id = id; } },className: { get: function() { return this._element.className; },set: function(className) { this._element.className = className; } },width: { get: function() { return this._width; },set: function(width) { this._style.width = (this._width = width) + 'px'; } },height: { get: function() { return this._height; },set: function(height) { this._style.height = (this._height = height) + 'px'; } },backgroundColor: { get: function() { return this._backgroundColor; },set: function(color) { this._element.style.backgroundColor = this._backgroundColor = color; } },opacity: { get: function() { return this._opacity; },set: function(opacity) { this._style.opacity = this._opacity = opacity; } },visible: { get: function() { return this._visible; },set: function(visible) { if (this._visible = visible) { this._style.display = 'block'; } else { this._style.display = 'none'; } } },touchEnabled: { get: function() { return this._touchEnabled; },set: function(enabled) { if (this._touchEnabled = enabled) { this._style.pointerEvents = 'all'; } else { this._style.pointerEvents = 'none'; } } },intersect: function(other) { return this._offsetX < other._offsetX + other.width && other._offsetX < this._offsetX + this.width && this._offsetY < other._offsetY + other.height && other._offsetY < this._offsetY + this.height; },within: function(other,distance) { if (distance == null) { distance = (this.width + this.height + other.width + other.height)/4; } var _; return (_ = this._offsetX - other._offsetX + (this.width - other.width) / 2) * _ + (_ = this._offsetY - other._offsetY + (this.height - other.height) / 2) * _ < distance * distance; },scale: function(x,y) { if (y == null) { y = x; } this._scaleX *= x; this._scaleY *= y; this._dirty = true; },rotate: function(deg) { this._rotation += deg; this._dirty = true; },scaleX: { get: function() { return this._scaleX; },set: function(scaleX) { this._scaleX = scaleX; this._dirty = true; } },scaleY: { get: function() { return this._scaleY; },set: function(scaleY) { this._scaleY = scaleY; this._dirty = true; } },rotation: { get: function() { return this._rotation; },set: function(rotation) { this._rotation = rotation; this._dirty = true; } }},); enchant.Sprite = enchant.Class.create(enchant.Entity{initialize:function(width,height) { enchant.Entity.call(this); this.width = width; this.height = height; this._scaleX = 1; this._scaleY = 1; this._rotation = 0; this._dirty = false; this._image = null; this._frame = 0; this._frameSequence = []; this._style.overflow = 'hidden'; this.addEventListener('render',function() { if (this._dirty) { var transform = [ 'rotate(',this._rotation,'deg)','scale(',this._scaleX,',',this._scaleY,')' ]; // Issues #80 if (navigator.userAgent.indexOf('iPhone') !== -1) { transform.push('translate3d(0,0,0)'); } this._style[enchant.ENV.VENDOR_PREFIX + 'Transform'] = transform.join(''); this._dirty = false; } }); this.addEventListener('enterframe',function() { if (this._frameSequence.length !== 0) { var nextFrame = this._frameSequence.shift(); if (nextFrame === null) { this._frameSequence = []; } else { this._setFrame(nextFrame); this._frameSequence.push(nextFrame); } } }); if (enchant.Game.instance._debug) { this._style.border = "1px solid red"; this._style.margin = "-1px"; } },image: { get: function() { return this._image; },set: function(image) { if (image === this._image) { return; } if (this._image != null) { if (this._image.css) { this._style.backgroundImage = ''; } else if (this._element.firstChild) { this._element.removeChild(this._element.firstChild); if (this._dirtyListener) { this.removeEventListener('render',this._dirtyListener); this._dirtyListener = null; } else { this._image._parent = null; } } } if (image != null) { if (image._css) { this._style.backgroundImage = image._css; } else if (image._parent) { var canvas = document.createElement('canvas'); var context = canvas.getContext('2d'); canvas.width = image.width; canvas.height = image.height; context.drawImage(image._element,0,0); this._dirtyListener = function() { if (image._dirty) { context.drawImage(image._element); image._dirty = false; } }; this.addEventListener('render',this._dirtyListener); this._element.appendChild(canvas); } else { image._parent = this; this._element.appendChild(image._element); } } this._image = image; this.frame = this.frame; } },frame: { get: function() { return this._frame; },set: function(frame) { if (frame instanceof Array) { var frameSequence = frame; var nextFrame = frameSequence.shift(); this._setFrame(nextFrame); frameSequence.push(nextFrame); this._frameSequence = frameSequence; } else { this._setFrame(frame); this._frameSequence = []; this._frame = frame; } } },_setFrame: function(frame) { if (this._image != null) { this._frame = frame; var row = this._image.width/this._width | 0; if (this._image._css) { this._style.backgroundPosition = [ -(frame % row | 0) * this._width,'px ',-(frame / row | 0) * this._height,'px' ].join(''); } else if (this._element.firstChild) { var style = this._element.firstChild.style; style.left = -(frame % row | 0) * this._width + 'px'; style.top = -(frame / row | 0) * this._height + 'px'; } } }},); enchant.Label = enchant.Class.create(enchant.Entity{initialize:function(text) { enchant.Entity.call(this); this.width = 300; this.text = text; this.textAlign = 'left'; },text: { get: function() { return this._element.innerHTML; },set: function(text) { this._element.innerHTML = text; } },textAlign: { get: function() { return this._style.textAlign; },set: function(textAlign) { this._style.textAlign = textAlign; } },font: { get: function() { return this._style.font; },set: function(font) { this._style.font = font; } },color: { get: function() { return this._style.color; },set: function(color) { this._style.color = color; } }},()); enchant.Group = enchant.Class.create(enchant.Node{initialize:function() { enchant.Node.call(this); this.childNodes = []; this._x = 0; this._y = 0; },addChild: function(node) { this.childNodes.push(node); node.parentNode = this; node.dispatchEvent(new enchant.Event('added')); if (this.scene) { var e = new enchant.Event('addedtoscene'); node.scene = this.scene; node.dispatchEvent(e); node._updateCoordinate(); var fragment = document.createDocumentFragment(); var nodes; var push = Array.prototype.push; if (node._element) { fragment.appendChild(node._element); } else if (node.childNodes) { nodes = node.childNodes.slice() .reverse(); while (nodes.length) { node = nodes.pop(); node.scene = this.scene; node.dispatchEvent(e); if (node._element) { fragment.appendChild(node._element); } else if (node.childNodes) { push.apply(nodes,node.childNodes.reverse()); } } } if (!fragment.childNodes.length) { return; } var nextSibling,thisNode = this; while (thisNode.parentNode) { nodes = thisNode.parentNode.childNodes; nodes = nodes.slice(nodes.indexOf(thisNode) + 1) .reverse(); while (nodes.length) { node = nodes.pop(); if (node._element) { nextSibling = node._element; break; } else if (node.childNodes) { push.apply(nodes,node.childNodes.slice() .reverse()); } } thisNode = thisNode.parentNode; } if (nextSibling) { this.scene._element.insertBefore(fragment,nextSibling); } else { this.scene._element.appendChild(fragment); } } },insertBefore: function(node,reference) { var i = this.childNodes.indexOf(reference); if (i !== -1) { this.childNodes.splice(i,0,node); node.parentNode = this; node.dispatchEvent(new enchant.Event('added')); if (this.scene) { var e = new enchant.Event('addedtoscene'); node.scene = this.scene; node.dispatchEvent(e); node._updateCoordinate(); var fragment = document.createDocumentFragment(); var nodes; var push = Array.prototype.push; if (node._element) { fragment.appendChild(node._element); } else if (node.childNodes) { nodes = node.childNodes.slice() .reverse(); while (nodes.length) { node = nodes.pop(); node.scene = this.scene; node.dispatchEvent(e); if (node._element) { fragment.appendChild(node._element); } else if (node.childNodes) { push.apply(nodes,node.childNodes.reverse()); } } } if (!fragment.childNodes.length) { return; } var nextSibling,thisNode = reference; while (thisNode !== this) { if (i != null) { nodes = this.childNodes.slice(i + 1) .reverse(); i = null; } else { nodes = thisNode.parentNode.childNodes; nodes = nodes.slice(nodes.indexOf(thisNode) + 1) .reverse(); } while (nodes.length) { node = nodes.pop(); if (node._element) { nextSibling = node._element; break; } else if (node.childNodes) { push.apply(nodes,node.childNodes.slice() .reverse()); } } thisNode = thisNode.parentNode; } if (nextSibling) { this.scene._element.insertBefore(fragment,nextSibling); } else { this.scene._element.appendChild(fragment); } } } else { this.addChild(node); } },removeChild: function(node) { var i = this.childNodes.indexOf(node); if (i !== -1) { this.childNodes.splice(i,1); } else { return; } node.parentNode = null; node.dispatchEvent(new enchant.Event('removed')); if (this.scene) { var e = new enchant.Event('removedfromscene'); node.scene = null; node.dispatchEvent(e); if (node._element) { this.scene._element.removeChild(node._element); } else if (node.childNodes) { var nodes = node.childNodes.slice(); var push = Array.prototype.push; while (nodes.length) { node = nodes.pop(); node.scene = null; node.dispatchEvent(e); if (node._element) { this.scene._element.removeChild(node._element); } else if (node.childNodes) { push.apply(nodes,node.childNodes); } } } } },firstChild: { get: function() { return this.childNodes[0]; } },lastChild: { get: function() { return this.childNodes[this.childNodes.length - 1]; } },_updateCoordinate: function() { if (this.parentNode) { this._offsetX = this.parentNode._offsetX + this._x; this._offsetY = this.parentNode._offsetY + this._y; } else { this._offsetX = this._x; this._offsetY = this._y; } for (var i = 0,len = this.childNodes.length; i < len; i++) { this.childNodes[i]._updateCoordinate(); } }},); enchant.RGroup = enchant.Class.create(enchant.Group{initialize:function(width,height) { enchant.Group.call(this); if (arguments.length < 2) { throw("Width and height of RGroup must be specified"); } this.width = width; this.height = height; this.rotationOrigin = { x: width/2,y: height/2 }; this._rotation = 0; },addChild: function(node) { enchant.Group.prototype.addChild.apply(this,arguments); node.transformOrigin = "0 0"; },rotation: { get: function() { return this._rotation; },set: function(rotation) { var diff_rotation = (rotation - this._rotation); if (diff_rotation === 0) { return; } var rad = diff_rotation/180 * Math.PI; var sin = Math.sin(rad); var cos = Math.cos(rad); var origin = { x: this.width/2,y: this.height/2 }; for (var i = 0,len = this.childNodes.length; i < len; i++) { var node = this.childNodes[i]; node.rotation -= diff_rotation; var rx = (node.x - origin.x); var ry = (node.y - origin.y); node.x = +cos * rx + sin * ry + origin.x; node.y = -sin * rx + cos * ry + origin.y; } this._rotation = rotation; } }},); enchant.Scene = enchant.Class.create(enchant.Group{initialize:function() { var game = enchant.Game.instance; enchant.Group.call(this); this._element = document.createElement('div'); this._element.style.position = 'absolute'; this._element.style.overflow = 'hidden'; this._element.style.width = (this.width = game.width) + 'px'; this._element.style.height = (this.height = game.height) + 'px'; this._element.style[enchant.ENV.VENDOR_PREFIX + 'TransformOrigin'] = '0 0'; this._element.style[enchant.ENV.VENDOR_PREFIX + 'Transform'] = 'scale(' + game.scale + ')'; this.scene = this; var that = this; if (enchant.ENV.TOUCH_ENABLED) { this._element.addEventListener('touchstart',function(e) { var touches = e.touches; for (var i = 0,len = touches.length; i < len; i++) { e = new enchant.Event('touchstart'); e.identifier = touches[i].identifier; e._initPosition(touches[i].pageX,touches[i].pageY); that.dispatchEvent(e); } },false); this._element.addEventListener('touchmove',function(e) { var touches = e.touches; for (var i = 0,len = touches.length; i < len; i++) { e = new enchant.Event('touchmove'); e.identifier = touches[i].identifier; e._initPosition(touches[i].pageX,touches[i].pageY); that.dispatchEvent(e); } },false); this._element.addEventListener('touchend',function(e) { var touches = e.changedTouches; for (var i = 0,len = touches.length; i < len; i++) { e = new enchant.Event('touchend'); e.identifier = touches[i].identifier; e._initPosition(touches[i].pageX,touches[i].pageY); that.dispatchEvent(e); } },false); } else { this._element.addEventListener('mousedown',function(e) { var x = e.pageX; var y = e.pageY; e = new enchant.Event('touchstart'); e.identifier = game._mousedownID; e._initPosition(x,y); that.dispatchEvent(e); that._mousedown = true; },false); game._element.addEventListener('mousemove',function(e) { if (!that._mousedown) { return; } var x = e.pageX; var y = e.pageY; e = new enchant.Event('touchmove'); e.identifier = game._mousedownID; e._initPosition(x,y); that.dispatchEvent(e); },false); game._element.addEventListener('mouseup',function(e) { if (!that._mousedown) { return; } var x = e.pageX; var y = e.pageY; e = new enchant.Event('touchend'); e.identifier = game._mousedownID; e._initPosition(x,y); that.dispatchEvent(e); that._mousedown = false; },false); } },backgroundColor: { get: function() { return this._backgroundColor; },set: function(color) { this._element.style.backgroundColor = this._backgroundColor = color; } },_updateCoordinate: function() { this._offsetX = this._x; this._offsetY = this._y; for (var i = 0,len = this.childNodes.length; i < len; i++) { this.childNodes[i]._updateCoordinate(); } }},()); enchant.Scene = enchant.Class.create(enchant.Group{initialize:function() { enchant.Group.call(this); this._element = document.createElement('div'); this._element.style.position = 'absolute'; this._element.style.overflow = 'hidden'; this._element.style.width = (this.width = enchant.Game.instance.width) + 'px'; this._element.style.height = (this.height = enchant.Game.instance.height) + 'px'; this._element.style[enchant.ENV.VENDOR_PREFIX + 'TransformOrigin'] = '0 0'; this._element.style[enchant.ENV.VENDOR_PREFIX + 'Transform'] = 'scale(' + enchant.Game.instance.scale + ')'; this.scene = this; var that = this; if (enchant.ENV.TOUCH_ENABLED) { this._element.addEventListener('touchstart',function(e) { var touches = e.touches; for (var i = 0,len = touches.length; i < len; i++) { e = new enchant.Event('touchstart'); e.identifier = touches[i].identifier; e._initPosition(touches[i].pageX,touches[i].pageY); that.dispatchEvent(e); } },false); this._element.addEventListener('touchmove',function(e) { var touches = e.touches; for (var i = 0,len = touches.length; i < len; i++) { e = new enchant.Event('touchmove'); e.identifier = touches[i].identifier; e._initPosition(touches[i].pageX,touches[i].pageY); that.dispatchEvent(e); } },false); this._element.addEventListener('touchend',function(e) { var touches = e.changedTouches; for (var i = 0,len = touches.length; i < len; i++) { e = new enchant.Event('touchend'); e.identifier = touches[i].identifier; e._initPosition(touches[i].pageX,touches[i].pageY); that.dispatchEvent(e); } },false); } else { this._element.addEventListener('mousedown',function(e) { var x = e.pageX; var y = e.pageY; e = new enchant.Event('touchstart'); e.identifier = enchant.Game.instance._mousedownID; e._initPosition(x,y); that.dispatchEvent(e); that._mousedown = true; },false); enchant.Game.instance._element.addEventListener('mousemove',function(e) { if (!that._mousedown) { return; } var x = e.pageX; var y = e.pageY; e = new enchant.Event('touchmove'); e.identifier = enchant.Game.instance._mousedownID; e._initPosition(x,y); that.dispatchEvent(e); },false); enchant.Game.instance._element.addEventListener('mouseup',function(e) { if (!that._mousedown) { return; } var x = e.pageX; var y = e.pageY; e = new enchant.Event('touchend'); e.identifier = enchant.Game.instance._mousedownID; e._initPosition(x,y); that.dispatchEvent(e); that._mousedown = false; },false); } },backgroundColor: { get: function() { return this._backgroundColor; },set: function(color) { this._element.style.backgroundColor = this._backgroundColor = color; } },_updateCoordinate: function() { this._offsetX = this._x; this._offsetY = this._y; for (var i = 0,len = this.childNodes.length; i < len; i++) { this.childNodes[i]._updateCoordinate(); } }},); enchant.Surface = enchant.Class.create(enchant.EventTarget{initialize:function(width,height) { enchant.EventTarget.call(this); var game = enchant.Game.instance; this.width = width; this.height = height; this.context = null; var id = 'enchant-surface' + game._surfaceID++; if (document.getCSSCanvasContext) { this.context = document.getCSSCanvasContext('2d',id,width,height); this._element = this.context.canvas; this._css = '-webkit-canvas(' + id + ')'; var context = this.context; } else if (document.mozSetImageElement) { this._element = document.createElement('canvas'); this._element.width = width; this._element.height = height; this._css = '-moz-element(#' + id + ')'; this.context = this._element.getContext('2d'); document.mozSetImageElement(id,this._element); } else { this._element = document.createElement('canvas'); this._element.width = width; this._element.height = height; this._element.style.position = 'absolute'; this.context = this._element.getContext('2d'); enchant.ENV.CANVAS_DRAWING_METHODS.forEach(function(name) { var method = this.context[name]; this.context[name] = function() { method.apply(this,arguments); this._dirty = true; }; },this); } },getPixel: function(x,y) { return this.context.getImageData(x,y,1,1) .data; },setPixel: function(x,y,r,g,b,a) { var pixel = this.context.createImageData(1,1); pixel.data[0] = r; pixel.data[1] = g; pixel.data[2] = b; pixel.data[3] = a; this.context.putImageData(pixel,x,y); },clear: function() { this.context.clearRect(0,0,this.width,this.height); },draw: function(image) { image = image._element; if (arguments.length === 1) { this.context.drawImage(image,0,0); } else { var args = arguments; args[0] = image; this.context.drawImage.apply(this.context,args); } },clone: function() { var clone = new enchant.Surface(this.width,this.height); clone.draw(this); return clone; },toDataURL: function() { var src = this._element.src; if (src) { if (src.slice(0,5) === 'data:') { return src; } else { return this.clone() .toDataurl('URL('); } } else { return this._element.toDataurl('URL('); } }}; enchant.Sound = enchant.Class.create(enchant.EventTarget,{initialize:function() { enchant.EventTarget.call(this); this.duration = 0; throw new Error("Illegal Constructor"); },play: function() { if (this._element) { this._element.play(); } },pause: function() { if (this._element) { this._element.pause(); } },stop: function() { this.pause(); this.currentTime = 0; },clone: function() { var clone; if (this._element instanceof Audio) { clone = Object.create(enchant.Sound.prototype,{ _element: { value: this._element.cloneNode(false) },duration: { value: this.duration } }); } else if (enchant.ENV.USE_FLASH_SOUND) { return this; } else { clone = Object.create(enchant.Sound.prototype); } enchant.EventTarget.call(clone); return clone; },currentTime: { get: function() { return this._element ? this._element.currentTime : 0; },set: function(time) { if (this._element) { this._element.currentTime = time; } } },volume: { get: function() { return this._element ? this._element.volume : 1; },set: function(volume) { if (this._element) { this._element.volume = volume; } } }};

enchant.Sound.enabledInMobileSafari = false;
__ESCAPED_SOURCE_END_CLEAN_CSS__